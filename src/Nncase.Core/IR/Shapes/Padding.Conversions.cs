//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4 template.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

using System;

namespace Nncase.IR.Shapes;

public partial class Padding
{
    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Padding"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Padding((Dimension Before, Dimension After) value) => new(value.Before, value.After);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Padding"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Padding((Dimension Before, int After) value) => new(value.Before, value.After);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Padding"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Padding((int Before, Dimension After) value) => new(value.Before, value.After);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Padding"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Padding((int Before, int After) value) => new(value.Before, value.After);

}
