//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4 template.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using CommunityToolkit.HighPerformance;

namespace Nncase;

// NOTE fixed array not suppot generic

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector4<T> : IEquatable<Vector4<T>>, IAdditionOperators<Vector4<T>, Vector4<T>, Vector4<T>>, ISubtractionOperators<Vector4<T>, Vector4<T>, Vector4<T>>, IMultiplyOperators<Vector4<T>, Vector4<T>, Vector4<T>>, IDivisionOperators<Vector4<T>, Vector4<T>, Vector4<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;

    public static Vector4<T> Create(T[] array) {
      Vector4<T> vec = default;
      var src = array.AsSpan();
      var dest = vec.AsSpan();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i) = value;
    }

    public bool Equals(Vector4<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public int Count => 4;

    public static Vector4<T> operator +(Vector4<T> left, Vector4<T> right) {
        Vector4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector4<T> operator -(Vector4<T> left, Vector4<T> right) {
        Vector4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector4<T> operator *(Vector4<T> left, Vector4<T> right) {
        Vector4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector4<T> operator /(Vector4<T> left, Vector4<T> right) {
        Vector4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector8<T> : IEquatable<Vector8<T>>, IAdditionOperators<Vector8<T>, Vector8<T>, Vector8<T>>, ISubtractionOperators<Vector8<T>, Vector8<T>, Vector8<T>>, IMultiplyOperators<Vector8<T>, Vector8<T>, Vector8<T>>, IDivisionOperators<Vector8<T>, Vector8<T>, Vector8<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;

    public static Vector8<T> Create(T[] array) {
      Vector8<T> vec = default;
      var src = array.AsSpan();
      var dest = vec.AsSpan();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i) = value;
    }

    public bool Equals(Vector8<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public int Count => 8;

    public static Vector8<T> operator +(Vector8<T> left, Vector8<T> right) {
        Vector8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector8<T> operator -(Vector8<T> left, Vector8<T> right) {
        Vector8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector8<T> operator *(Vector8<T> left, Vector8<T> right) {
        Vector8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector8<T> operator /(Vector8<T> left, Vector8<T> right) {
        Vector8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector16<T> : IEquatable<Vector16<T>>, IAdditionOperators<Vector16<T>, Vector16<T>, Vector16<T>>, ISubtractionOperators<Vector16<T>, Vector16<T>, Vector16<T>>, IMultiplyOperators<Vector16<T>, Vector16<T>, Vector16<T>>, IDivisionOperators<Vector16<T>, Vector16<T>, Vector16<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;

    public static Vector16<T> Create(T[] array) {
      Vector16<T> vec = default;
      var src = array.AsSpan();
      var dest = vec.AsSpan();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i) = value;
    }

    public bool Equals(Vector16<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public int Count => 16;

    public static Vector16<T> operator +(Vector16<T> left, Vector16<T> right) {
        Vector16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector16<T> operator -(Vector16<T> left, Vector16<T> right) {
        Vector16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector16<T> operator *(Vector16<T> left, Vector16<T> right) {
        Vector16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector16<T> operator /(Vector16<T> left, Vector16<T> right) {
        Vector16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector32<T> : IEquatable<Vector32<T>>, IAdditionOperators<Vector32<T>, Vector32<T>, Vector32<T>>, ISubtractionOperators<Vector32<T>, Vector32<T>, Vector32<T>>, IMultiplyOperators<Vector32<T>, Vector32<T>, Vector32<T>>, IDivisionOperators<Vector32<T>, Vector32<T>, Vector32<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_0_16;
    private T _item_0_17;
    private T _item_0_18;
    private T _item_0_19;
    private T _item_0_20;
    private T _item_0_21;
    private T _item_0_22;
    private T _item_0_23;
    private T _item_0_24;
    private T _item_0_25;
    private T _item_0_26;
    private T _item_0_27;
    private T _item_0_28;
    private T _item_0_29;
    private T _item_0_30;
    private T _item_0_31;

    public static Vector32<T> Create(T[] array) {
      Vector32<T> vec = default;
      var src = array.AsSpan();
      var dest = vec.AsSpan();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i) = value;
    }

    public bool Equals(Vector32<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public int Count => 32;

    public static Vector32<T> operator +(Vector32<T> left, Vector32<T> right) {
        Vector32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector32<T> operator -(Vector32<T> left, Vector32<T> right) {
        Vector32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector32<T> operator *(Vector32<T> left, Vector32<T> right) {
        Vector32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector32<T> operator /(Vector32<T> left, Vector32<T> right) {
        Vector32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector64<T> : IEquatable<Vector64<T>>, IAdditionOperators<Vector64<T>, Vector64<T>, Vector64<T>>, ISubtractionOperators<Vector64<T>, Vector64<T>, Vector64<T>>, IMultiplyOperators<Vector64<T>, Vector64<T>, Vector64<T>>, IDivisionOperators<Vector64<T>, Vector64<T>, Vector64<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_0_16;
    private T _item_0_17;
    private T _item_0_18;
    private T _item_0_19;
    private T _item_0_20;
    private T _item_0_21;
    private T _item_0_22;
    private T _item_0_23;
    private T _item_0_24;
    private T _item_0_25;
    private T _item_0_26;
    private T _item_0_27;
    private T _item_0_28;
    private T _item_0_29;
    private T _item_0_30;
    private T _item_0_31;
    private T _item_0_32;
    private T _item_0_33;
    private T _item_0_34;
    private T _item_0_35;
    private T _item_0_36;
    private T _item_0_37;
    private T _item_0_38;
    private T _item_0_39;
    private T _item_0_40;
    private T _item_0_41;
    private T _item_0_42;
    private T _item_0_43;
    private T _item_0_44;
    private T _item_0_45;
    private T _item_0_46;
    private T _item_0_47;
    private T _item_0_48;
    private T _item_0_49;
    private T _item_0_50;
    private T _item_0_51;
    private T _item_0_52;
    private T _item_0_53;
    private T _item_0_54;
    private T _item_0_55;
    private T _item_0_56;
    private T _item_0_57;
    private T _item_0_58;
    private T _item_0_59;
    private T _item_0_60;
    private T _item_0_61;
    private T _item_0_62;
    private T _item_0_63;

    public static Vector64<T> Create(T[] array) {
      Vector64<T> vec = default;
      var src = array.AsSpan();
      var dest = vec.AsSpan();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i) = value;
    }

    public bool Equals(Vector64<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public int Count => 64;

    public static Vector64<T> operator +(Vector64<T> left, Vector64<T> right) {
        Vector64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector64<T> operator -(Vector64<T> left, Vector64<T> right) {
        Vector64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector64<T> operator *(Vector64<T> left, Vector64<T> right) {
        Vector64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector64<T> operator /(Vector64<T> left, Vector64<T> right) {
        Vector64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector128<T> : IEquatable<Vector128<T>>, IAdditionOperators<Vector128<T>, Vector128<T>, Vector128<T>>, ISubtractionOperators<Vector128<T>, Vector128<T>, Vector128<T>>, IMultiplyOperators<Vector128<T>, Vector128<T>, Vector128<T>>, IDivisionOperators<Vector128<T>, Vector128<T>, Vector128<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_0_16;
    private T _item_0_17;
    private T _item_0_18;
    private T _item_0_19;
    private T _item_0_20;
    private T _item_0_21;
    private T _item_0_22;
    private T _item_0_23;
    private T _item_0_24;
    private T _item_0_25;
    private T _item_0_26;
    private T _item_0_27;
    private T _item_0_28;
    private T _item_0_29;
    private T _item_0_30;
    private T _item_0_31;
    private T _item_0_32;
    private T _item_0_33;
    private T _item_0_34;
    private T _item_0_35;
    private T _item_0_36;
    private T _item_0_37;
    private T _item_0_38;
    private T _item_0_39;
    private T _item_0_40;
    private T _item_0_41;
    private T _item_0_42;
    private T _item_0_43;
    private T _item_0_44;
    private T _item_0_45;
    private T _item_0_46;
    private T _item_0_47;
    private T _item_0_48;
    private T _item_0_49;
    private T _item_0_50;
    private T _item_0_51;
    private T _item_0_52;
    private T _item_0_53;
    private T _item_0_54;
    private T _item_0_55;
    private T _item_0_56;
    private T _item_0_57;
    private T _item_0_58;
    private T _item_0_59;
    private T _item_0_60;
    private T _item_0_61;
    private T _item_0_62;
    private T _item_0_63;
    private T _item_0_64;
    private T _item_0_65;
    private T _item_0_66;
    private T _item_0_67;
    private T _item_0_68;
    private T _item_0_69;
    private T _item_0_70;
    private T _item_0_71;
    private T _item_0_72;
    private T _item_0_73;
    private T _item_0_74;
    private T _item_0_75;
    private T _item_0_76;
    private T _item_0_77;
    private T _item_0_78;
    private T _item_0_79;
    private T _item_0_80;
    private T _item_0_81;
    private T _item_0_82;
    private T _item_0_83;
    private T _item_0_84;
    private T _item_0_85;
    private T _item_0_86;
    private T _item_0_87;
    private T _item_0_88;
    private T _item_0_89;
    private T _item_0_90;
    private T _item_0_91;
    private T _item_0_92;
    private T _item_0_93;
    private T _item_0_94;
    private T _item_0_95;
    private T _item_0_96;
    private T _item_0_97;
    private T _item_0_98;
    private T _item_0_99;
    private T _item_0_100;
    private T _item_0_101;
    private T _item_0_102;
    private T _item_0_103;
    private T _item_0_104;
    private T _item_0_105;
    private T _item_0_106;
    private T _item_0_107;
    private T _item_0_108;
    private T _item_0_109;
    private T _item_0_110;
    private T _item_0_111;
    private T _item_0_112;
    private T _item_0_113;
    private T _item_0_114;
    private T _item_0_115;
    private T _item_0_116;
    private T _item_0_117;
    private T _item_0_118;
    private T _item_0_119;
    private T _item_0_120;
    private T _item_0_121;
    private T _item_0_122;
    private T _item_0_123;
    private T _item_0_124;
    private T _item_0_125;
    private T _item_0_126;
    private T _item_0_127;

    public static Vector128<T> Create(T[] array) {
      Vector128<T> vec = default;
      var src = array.AsSpan();
      var dest = vec.AsSpan();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i) = value;
    }

    public bool Equals(Vector128<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public int Count => 128;

    public static Vector128<T> operator +(Vector128<T> left, Vector128<T> right) {
        Vector128<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector128<T> operator -(Vector128<T> left, Vector128<T> right) {
        Vector128<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector128<T> operator *(Vector128<T> left, Vector128<T> right) {
        Vector128<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector128<T> operator /(Vector128<T> left, Vector128<T> right) {
        Vector128<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector4x4<T> : IEquatable<Vector4x4<T>>, IAdditionOperators<Vector4x4<T>, Vector4x4<T>, Vector4x4<T>>, ISubtractionOperators<Vector4x4<T>, Vector4x4<T>, Vector4x4<T>>, IMultiplyOperators<Vector4x4<T>, Vector4x4<T>, Vector4x4<T>>, IDivisionOperators<Vector4x4<T>, Vector4x4<T>, Vector4x4<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_1_0;
    private T _item_1_1;
    private T _item_1_2;
    private T _item_1_3;
    private T _item_2_0;
    private T _item_2_1;
    private T _item_2_2;
    private T _item_2_3;
    private T _item_3_0;
    private T _item_3_1;
    private T _item_3_2;
    private T _item_3_3;

    public static Vector4x4<T> Create(T[,] array) {
      Vector4x4<T> vec = default;
      var src = array.AsSpan2D();
      var dest = vec.AsSpan2D();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i, int j]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j) = value;
    }

    public bool Equals(Vector4x4<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public Span2D<T> AsSpan2D() => Span2D<T>.DangerousCreate(ref Unsafe.AsRef(in _item_0_0), Height, Width, 1);

    public int Height => 4;

    public int Width => 4;
    
    public int Count => Height * Width;

    public static Vector4x4<T> operator +(Vector4x4<T> left, Vector4x4<T> right) {
        Vector4x4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector4x4<T> operator -(Vector4x4<T> left, Vector4x4<T> right) {
        Vector4x4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector4x4<T> operator *(Vector4x4<T> left, Vector4x4<T> right) {
        Vector4x4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector4x4<T> operator /(Vector4x4<T> left, Vector4x4<T> right) {
        Vector4x4<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector8x8<T> : IEquatable<Vector8x8<T>>, IAdditionOperators<Vector8x8<T>, Vector8x8<T>, Vector8x8<T>>, ISubtractionOperators<Vector8x8<T>, Vector8x8<T>, Vector8x8<T>>, IMultiplyOperators<Vector8x8<T>, Vector8x8<T>, Vector8x8<T>>, IDivisionOperators<Vector8x8<T>, Vector8x8<T>, Vector8x8<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_1_0;
    private T _item_1_1;
    private T _item_1_2;
    private T _item_1_3;
    private T _item_1_4;
    private T _item_1_5;
    private T _item_1_6;
    private T _item_1_7;
    private T _item_2_0;
    private T _item_2_1;
    private T _item_2_2;
    private T _item_2_3;
    private T _item_2_4;
    private T _item_2_5;
    private T _item_2_6;
    private T _item_2_7;
    private T _item_3_0;
    private T _item_3_1;
    private T _item_3_2;
    private T _item_3_3;
    private T _item_3_4;
    private T _item_3_5;
    private T _item_3_6;
    private T _item_3_7;
    private T _item_4_0;
    private T _item_4_1;
    private T _item_4_2;
    private T _item_4_3;
    private T _item_4_4;
    private T _item_4_5;
    private T _item_4_6;
    private T _item_4_7;
    private T _item_5_0;
    private T _item_5_1;
    private T _item_5_2;
    private T _item_5_3;
    private T _item_5_4;
    private T _item_5_5;
    private T _item_5_6;
    private T _item_5_7;
    private T _item_6_0;
    private T _item_6_1;
    private T _item_6_2;
    private T _item_6_3;
    private T _item_6_4;
    private T _item_6_5;
    private T _item_6_6;
    private T _item_6_7;
    private T _item_7_0;
    private T _item_7_1;
    private T _item_7_2;
    private T _item_7_3;
    private T _item_7_4;
    private T _item_7_5;
    private T _item_7_6;
    private T _item_7_7;

    public static Vector8x8<T> Create(T[,] array) {
      Vector8x8<T> vec = default;
      var src = array.AsSpan2D();
      var dest = vec.AsSpan2D();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i, int j]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j) = value;
    }

    public bool Equals(Vector8x8<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public Span2D<T> AsSpan2D() => Span2D<T>.DangerousCreate(ref Unsafe.AsRef(in _item_0_0), Height, Width, 1);

    public int Height => 8;

    public int Width => 8;
    
    public int Count => Height * Width;

    public static Vector8x8<T> operator +(Vector8x8<T> left, Vector8x8<T> right) {
        Vector8x8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector8x8<T> operator -(Vector8x8<T> left, Vector8x8<T> right) {
        Vector8x8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector8x8<T> operator *(Vector8x8<T> left, Vector8x8<T> right) {
        Vector8x8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector8x8<T> operator /(Vector8x8<T> left, Vector8x8<T> right) {
        Vector8x8<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector16x16<T> : IEquatable<Vector16x16<T>>, IAdditionOperators<Vector16x16<T>, Vector16x16<T>, Vector16x16<T>>, ISubtractionOperators<Vector16x16<T>, Vector16x16<T>, Vector16x16<T>>, IMultiplyOperators<Vector16x16<T>, Vector16x16<T>, Vector16x16<T>>, IDivisionOperators<Vector16x16<T>, Vector16x16<T>, Vector16x16<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_1_0;
    private T _item_1_1;
    private T _item_1_2;
    private T _item_1_3;
    private T _item_1_4;
    private T _item_1_5;
    private T _item_1_6;
    private T _item_1_7;
    private T _item_1_8;
    private T _item_1_9;
    private T _item_1_10;
    private T _item_1_11;
    private T _item_1_12;
    private T _item_1_13;
    private T _item_1_14;
    private T _item_1_15;
    private T _item_2_0;
    private T _item_2_1;
    private T _item_2_2;
    private T _item_2_3;
    private T _item_2_4;
    private T _item_2_5;
    private T _item_2_6;
    private T _item_2_7;
    private T _item_2_8;
    private T _item_2_9;
    private T _item_2_10;
    private T _item_2_11;
    private T _item_2_12;
    private T _item_2_13;
    private T _item_2_14;
    private T _item_2_15;
    private T _item_3_0;
    private T _item_3_1;
    private T _item_3_2;
    private T _item_3_3;
    private T _item_3_4;
    private T _item_3_5;
    private T _item_3_6;
    private T _item_3_7;
    private T _item_3_8;
    private T _item_3_9;
    private T _item_3_10;
    private T _item_3_11;
    private T _item_3_12;
    private T _item_3_13;
    private T _item_3_14;
    private T _item_3_15;
    private T _item_4_0;
    private T _item_4_1;
    private T _item_4_2;
    private T _item_4_3;
    private T _item_4_4;
    private T _item_4_5;
    private T _item_4_6;
    private T _item_4_7;
    private T _item_4_8;
    private T _item_4_9;
    private T _item_4_10;
    private T _item_4_11;
    private T _item_4_12;
    private T _item_4_13;
    private T _item_4_14;
    private T _item_4_15;
    private T _item_5_0;
    private T _item_5_1;
    private T _item_5_2;
    private T _item_5_3;
    private T _item_5_4;
    private T _item_5_5;
    private T _item_5_6;
    private T _item_5_7;
    private T _item_5_8;
    private T _item_5_9;
    private T _item_5_10;
    private T _item_5_11;
    private T _item_5_12;
    private T _item_5_13;
    private T _item_5_14;
    private T _item_5_15;
    private T _item_6_0;
    private T _item_6_1;
    private T _item_6_2;
    private T _item_6_3;
    private T _item_6_4;
    private T _item_6_5;
    private T _item_6_6;
    private T _item_6_7;
    private T _item_6_8;
    private T _item_6_9;
    private T _item_6_10;
    private T _item_6_11;
    private T _item_6_12;
    private T _item_6_13;
    private T _item_6_14;
    private T _item_6_15;
    private T _item_7_0;
    private T _item_7_1;
    private T _item_7_2;
    private T _item_7_3;
    private T _item_7_4;
    private T _item_7_5;
    private T _item_7_6;
    private T _item_7_7;
    private T _item_7_8;
    private T _item_7_9;
    private T _item_7_10;
    private T _item_7_11;
    private T _item_7_12;
    private T _item_7_13;
    private T _item_7_14;
    private T _item_7_15;
    private T _item_8_0;
    private T _item_8_1;
    private T _item_8_2;
    private T _item_8_3;
    private T _item_8_4;
    private T _item_8_5;
    private T _item_8_6;
    private T _item_8_7;
    private T _item_8_8;
    private T _item_8_9;
    private T _item_8_10;
    private T _item_8_11;
    private T _item_8_12;
    private T _item_8_13;
    private T _item_8_14;
    private T _item_8_15;
    private T _item_9_0;
    private T _item_9_1;
    private T _item_9_2;
    private T _item_9_3;
    private T _item_9_4;
    private T _item_9_5;
    private T _item_9_6;
    private T _item_9_7;
    private T _item_9_8;
    private T _item_9_9;
    private T _item_9_10;
    private T _item_9_11;
    private T _item_9_12;
    private T _item_9_13;
    private T _item_9_14;
    private T _item_9_15;
    private T _item_10_0;
    private T _item_10_1;
    private T _item_10_2;
    private T _item_10_3;
    private T _item_10_4;
    private T _item_10_5;
    private T _item_10_6;
    private T _item_10_7;
    private T _item_10_8;
    private T _item_10_9;
    private T _item_10_10;
    private T _item_10_11;
    private T _item_10_12;
    private T _item_10_13;
    private T _item_10_14;
    private T _item_10_15;
    private T _item_11_0;
    private T _item_11_1;
    private T _item_11_2;
    private T _item_11_3;
    private T _item_11_4;
    private T _item_11_5;
    private T _item_11_6;
    private T _item_11_7;
    private T _item_11_8;
    private T _item_11_9;
    private T _item_11_10;
    private T _item_11_11;
    private T _item_11_12;
    private T _item_11_13;
    private T _item_11_14;
    private T _item_11_15;
    private T _item_12_0;
    private T _item_12_1;
    private T _item_12_2;
    private T _item_12_3;
    private T _item_12_4;
    private T _item_12_5;
    private T _item_12_6;
    private T _item_12_7;
    private T _item_12_8;
    private T _item_12_9;
    private T _item_12_10;
    private T _item_12_11;
    private T _item_12_12;
    private T _item_12_13;
    private T _item_12_14;
    private T _item_12_15;
    private T _item_13_0;
    private T _item_13_1;
    private T _item_13_2;
    private T _item_13_3;
    private T _item_13_4;
    private T _item_13_5;
    private T _item_13_6;
    private T _item_13_7;
    private T _item_13_8;
    private T _item_13_9;
    private T _item_13_10;
    private T _item_13_11;
    private T _item_13_12;
    private T _item_13_13;
    private T _item_13_14;
    private T _item_13_15;
    private T _item_14_0;
    private T _item_14_1;
    private T _item_14_2;
    private T _item_14_3;
    private T _item_14_4;
    private T _item_14_5;
    private T _item_14_6;
    private T _item_14_7;
    private T _item_14_8;
    private T _item_14_9;
    private T _item_14_10;
    private T _item_14_11;
    private T _item_14_12;
    private T _item_14_13;
    private T _item_14_14;
    private T _item_14_15;
    private T _item_15_0;
    private T _item_15_1;
    private T _item_15_2;
    private T _item_15_3;
    private T _item_15_4;
    private T _item_15_5;
    private T _item_15_6;
    private T _item_15_7;
    private T _item_15_8;
    private T _item_15_9;
    private T _item_15_10;
    private T _item_15_11;
    private T _item_15_12;
    private T _item_15_13;
    private T _item_15_14;
    private T _item_15_15;

    public static Vector16x16<T> Create(T[,] array) {
      Vector16x16<T> vec = default;
      var src = array.AsSpan2D();
      var dest = vec.AsSpan2D();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i, int j]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j) = value;
    }

    public bool Equals(Vector16x16<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public Span2D<T> AsSpan2D() => Span2D<T>.DangerousCreate(ref Unsafe.AsRef(in _item_0_0), Height, Width, 1);

    public int Height => 16;

    public int Width => 16;
    
    public int Count => Height * Width;

    public static Vector16x16<T> operator +(Vector16x16<T> left, Vector16x16<T> right) {
        Vector16x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector16x16<T> operator -(Vector16x16<T> left, Vector16x16<T> right) {
        Vector16x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector16x16<T> operator *(Vector16x16<T> left, Vector16x16<T> right) {
        Vector16x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector16x16<T> operator /(Vector16x16<T> left, Vector16x16<T> right) {
        Vector16x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector32x16<T> : IEquatable<Vector32x16<T>>, IAdditionOperators<Vector32x16<T>, Vector32x16<T>, Vector32x16<T>>, ISubtractionOperators<Vector32x16<T>, Vector32x16<T>, Vector32x16<T>>, IMultiplyOperators<Vector32x16<T>, Vector32x16<T>, Vector32x16<T>>, IDivisionOperators<Vector32x16<T>, Vector32x16<T>, Vector32x16<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_1_0;
    private T _item_1_1;
    private T _item_1_2;
    private T _item_1_3;
    private T _item_1_4;
    private T _item_1_5;
    private T _item_1_6;
    private T _item_1_7;
    private T _item_1_8;
    private T _item_1_9;
    private T _item_1_10;
    private T _item_1_11;
    private T _item_1_12;
    private T _item_1_13;
    private T _item_1_14;
    private T _item_1_15;
    private T _item_2_0;
    private T _item_2_1;
    private T _item_2_2;
    private T _item_2_3;
    private T _item_2_4;
    private T _item_2_5;
    private T _item_2_6;
    private T _item_2_7;
    private T _item_2_8;
    private T _item_2_9;
    private T _item_2_10;
    private T _item_2_11;
    private T _item_2_12;
    private T _item_2_13;
    private T _item_2_14;
    private T _item_2_15;
    private T _item_3_0;
    private T _item_3_1;
    private T _item_3_2;
    private T _item_3_3;
    private T _item_3_4;
    private T _item_3_5;
    private T _item_3_6;
    private T _item_3_7;
    private T _item_3_8;
    private T _item_3_9;
    private T _item_3_10;
    private T _item_3_11;
    private T _item_3_12;
    private T _item_3_13;
    private T _item_3_14;
    private T _item_3_15;
    private T _item_4_0;
    private T _item_4_1;
    private T _item_4_2;
    private T _item_4_3;
    private T _item_4_4;
    private T _item_4_5;
    private T _item_4_6;
    private T _item_4_7;
    private T _item_4_8;
    private T _item_4_9;
    private T _item_4_10;
    private T _item_4_11;
    private T _item_4_12;
    private T _item_4_13;
    private T _item_4_14;
    private T _item_4_15;
    private T _item_5_0;
    private T _item_5_1;
    private T _item_5_2;
    private T _item_5_3;
    private T _item_5_4;
    private T _item_5_5;
    private T _item_5_6;
    private T _item_5_7;
    private T _item_5_8;
    private T _item_5_9;
    private T _item_5_10;
    private T _item_5_11;
    private T _item_5_12;
    private T _item_5_13;
    private T _item_5_14;
    private T _item_5_15;
    private T _item_6_0;
    private T _item_6_1;
    private T _item_6_2;
    private T _item_6_3;
    private T _item_6_4;
    private T _item_6_5;
    private T _item_6_6;
    private T _item_6_7;
    private T _item_6_8;
    private T _item_6_9;
    private T _item_6_10;
    private T _item_6_11;
    private T _item_6_12;
    private T _item_6_13;
    private T _item_6_14;
    private T _item_6_15;
    private T _item_7_0;
    private T _item_7_1;
    private T _item_7_2;
    private T _item_7_3;
    private T _item_7_4;
    private T _item_7_5;
    private T _item_7_6;
    private T _item_7_7;
    private T _item_7_8;
    private T _item_7_9;
    private T _item_7_10;
    private T _item_7_11;
    private T _item_7_12;
    private T _item_7_13;
    private T _item_7_14;
    private T _item_7_15;
    private T _item_8_0;
    private T _item_8_1;
    private T _item_8_2;
    private T _item_8_3;
    private T _item_8_4;
    private T _item_8_5;
    private T _item_8_6;
    private T _item_8_7;
    private T _item_8_8;
    private T _item_8_9;
    private T _item_8_10;
    private T _item_8_11;
    private T _item_8_12;
    private T _item_8_13;
    private T _item_8_14;
    private T _item_8_15;
    private T _item_9_0;
    private T _item_9_1;
    private T _item_9_2;
    private T _item_9_3;
    private T _item_9_4;
    private T _item_9_5;
    private T _item_9_6;
    private T _item_9_7;
    private T _item_9_8;
    private T _item_9_9;
    private T _item_9_10;
    private T _item_9_11;
    private T _item_9_12;
    private T _item_9_13;
    private T _item_9_14;
    private T _item_9_15;
    private T _item_10_0;
    private T _item_10_1;
    private T _item_10_2;
    private T _item_10_3;
    private T _item_10_4;
    private T _item_10_5;
    private T _item_10_6;
    private T _item_10_7;
    private T _item_10_8;
    private T _item_10_9;
    private T _item_10_10;
    private T _item_10_11;
    private T _item_10_12;
    private T _item_10_13;
    private T _item_10_14;
    private T _item_10_15;
    private T _item_11_0;
    private T _item_11_1;
    private T _item_11_2;
    private T _item_11_3;
    private T _item_11_4;
    private T _item_11_5;
    private T _item_11_6;
    private T _item_11_7;
    private T _item_11_8;
    private T _item_11_9;
    private T _item_11_10;
    private T _item_11_11;
    private T _item_11_12;
    private T _item_11_13;
    private T _item_11_14;
    private T _item_11_15;
    private T _item_12_0;
    private T _item_12_1;
    private T _item_12_2;
    private T _item_12_3;
    private T _item_12_4;
    private T _item_12_5;
    private T _item_12_6;
    private T _item_12_7;
    private T _item_12_8;
    private T _item_12_9;
    private T _item_12_10;
    private T _item_12_11;
    private T _item_12_12;
    private T _item_12_13;
    private T _item_12_14;
    private T _item_12_15;
    private T _item_13_0;
    private T _item_13_1;
    private T _item_13_2;
    private T _item_13_3;
    private T _item_13_4;
    private T _item_13_5;
    private T _item_13_6;
    private T _item_13_7;
    private T _item_13_8;
    private T _item_13_9;
    private T _item_13_10;
    private T _item_13_11;
    private T _item_13_12;
    private T _item_13_13;
    private T _item_13_14;
    private T _item_13_15;
    private T _item_14_0;
    private T _item_14_1;
    private T _item_14_2;
    private T _item_14_3;
    private T _item_14_4;
    private T _item_14_5;
    private T _item_14_6;
    private T _item_14_7;
    private T _item_14_8;
    private T _item_14_9;
    private T _item_14_10;
    private T _item_14_11;
    private T _item_14_12;
    private T _item_14_13;
    private T _item_14_14;
    private T _item_14_15;
    private T _item_15_0;
    private T _item_15_1;
    private T _item_15_2;
    private T _item_15_3;
    private T _item_15_4;
    private T _item_15_5;
    private T _item_15_6;
    private T _item_15_7;
    private T _item_15_8;
    private T _item_15_9;
    private T _item_15_10;
    private T _item_15_11;
    private T _item_15_12;
    private T _item_15_13;
    private T _item_15_14;
    private T _item_15_15;
    private T _item_16_0;
    private T _item_16_1;
    private T _item_16_2;
    private T _item_16_3;
    private T _item_16_4;
    private T _item_16_5;
    private T _item_16_6;
    private T _item_16_7;
    private T _item_16_8;
    private T _item_16_9;
    private T _item_16_10;
    private T _item_16_11;
    private T _item_16_12;
    private T _item_16_13;
    private T _item_16_14;
    private T _item_16_15;
    private T _item_17_0;
    private T _item_17_1;
    private T _item_17_2;
    private T _item_17_3;
    private T _item_17_4;
    private T _item_17_5;
    private T _item_17_6;
    private T _item_17_7;
    private T _item_17_8;
    private T _item_17_9;
    private T _item_17_10;
    private T _item_17_11;
    private T _item_17_12;
    private T _item_17_13;
    private T _item_17_14;
    private T _item_17_15;
    private T _item_18_0;
    private T _item_18_1;
    private T _item_18_2;
    private T _item_18_3;
    private T _item_18_4;
    private T _item_18_5;
    private T _item_18_6;
    private T _item_18_7;
    private T _item_18_8;
    private T _item_18_9;
    private T _item_18_10;
    private T _item_18_11;
    private T _item_18_12;
    private T _item_18_13;
    private T _item_18_14;
    private T _item_18_15;
    private T _item_19_0;
    private T _item_19_1;
    private T _item_19_2;
    private T _item_19_3;
    private T _item_19_4;
    private T _item_19_5;
    private T _item_19_6;
    private T _item_19_7;
    private T _item_19_8;
    private T _item_19_9;
    private T _item_19_10;
    private T _item_19_11;
    private T _item_19_12;
    private T _item_19_13;
    private T _item_19_14;
    private T _item_19_15;
    private T _item_20_0;
    private T _item_20_1;
    private T _item_20_2;
    private T _item_20_3;
    private T _item_20_4;
    private T _item_20_5;
    private T _item_20_6;
    private T _item_20_7;
    private T _item_20_8;
    private T _item_20_9;
    private T _item_20_10;
    private T _item_20_11;
    private T _item_20_12;
    private T _item_20_13;
    private T _item_20_14;
    private T _item_20_15;
    private T _item_21_0;
    private T _item_21_1;
    private T _item_21_2;
    private T _item_21_3;
    private T _item_21_4;
    private T _item_21_5;
    private T _item_21_6;
    private T _item_21_7;
    private T _item_21_8;
    private T _item_21_9;
    private T _item_21_10;
    private T _item_21_11;
    private T _item_21_12;
    private T _item_21_13;
    private T _item_21_14;
    private T _item_21_15;
    private T _item_22_0;
    private T _item_22_1;
    private T _item_22_2;
    private T _item_22_3;
    private T _item_22_4;
    private T _item_22_5;
    private T _item_22_6;
    private T _item_22_7;
    private T _item_22_8;
    private T _item_22_9;
    private T _item_22_10;
    private T _item_22_11;
    private T _item_22_12;
    private T _item_22_13;
    private T _item_22_14;
    private T _item_22_15;
    private T _item_23_0;
    private T _item_23_1;
    private T _item_23_2;
    private T _item_23_3;
    private T _item_23_4;
    private T _item_23_5;
    private T _item_23_6;
    private T _item_23_7;
    private T _item_23_8;
    private T _item_23_9;
    private T _item_23_10;
    private T _item_23_11;
    private T _item_23_12;
    private T _item_23_13;
    private T _item_23_14;
    private T _item_23_15;
    private T _item_24_0;
    private T _item_24_1;
    private T _item_24_2;
    private T _item_24_3;
    private T _item_24_4;
    private T _item_24_5;
    private T _item_24_6;
    private T _item_24_7;
    private T _item_24_8;
    private T _item_24_9;
    private T _item_24_10;
    private T _item_24_11;
    private T _item_24_12;
    private T _item_24_13;
    private T _item_24_14;
    private T _item_24_15;
    private T _item_25_0;
    private T _item_25_1;
    private T _item_25_2;
    private T _item_25_3;
    private T _item_25_4;
    private T _item_25_5;
    private T _item_25_6;
    private T _item_25_7;
    private T _item_25_8;
    private T _item_25_9;
    private T _item_25_10;
    private T _item_25_11;
    private T _item_25_12;
    private T _item_25_13;
    private T _item_25_14;
    private T _item_25_15;
    private T _item_26_0;
    private T _item_26_1;
    private T _item_26_2;
    private T _item_26_3;
    private T _item_26_4;
    private T _item_26_5;
    private T _item_26_6;
    private T _item_26_7;
    private T _item_26_8;
    private T _item_26_9;
    private T _item_26_10;
    private T _item_26_11;
    private T _item_26_12;
    private T _item_26_13;
    private T _item_26_14;
    private T _item_26_15;
    private T _item_27_0;
    private T _item_27_1;
    private T _item_27_2;
    private T _item_27_3;
    private T _item_27_4;
    private T _item_27_5;
    private T _item_27_6;
    private T _item_27_7;
    private T _item_27_8;
    private T _item_27_9;
    private T _item_27_10;
    private T _item_27_11;
    private T _item_27_12;
    private T _item_27_13;
    private T _item_27_14;
    private T _item_27_15;
    private T _item_28_0;
    private T _item_28_1;
    private T _item_28_2;
    private T _item_28_3;
    private T _item_28_4;
    private T _item_28_5;
    private T _item_28_6;
    private T _item_28_7;
    private T _item_28_8;
    private T _item_28_9;
    private T _item_28_10;
    private T _item_28_11;
    private T _item_28_12;
    private T _item_28_13;
    private T _item_28_14;
    private T _item_28_15;
    private T _item_29_0;
    private T _item_29_1;
    private T _item_29_2;
    private T _item_29_3;
    private T _item_29_4;
    private T _item_29_5;
    private T _item_29_6;
    private T _item_29_7;
    private T _item_29_8;
    private T _item_29_9;
    private T _item_29_10;
    private T _item_29_11;
    private T _item_29_12;
    private T _item_29_13;
    private T _item_29_14;
    private T _item_29_15;
    private T _item_30_0;
    private T _item_30_1;
    private T _item_30_2;
    private T _item_30_3;
    private T _item_30_4;
    private T _item_30_5;
    private T _item_30_6;
    private T _item_30_7;
    private T _item_30_8;
    private T _item_30_9;
    private T _item_30_10;
    private T _item_30_11;
    private T _item_30_12;
    private T _item_30_13;
    private T _item_30_14;
    private T _item_30_15;
    private T _item_31_0;
    private T _item_31_1;
    private T _item_31_2;
    private T _item_31_3;
    private T _item_31_4;
    private T _item_31_5;
    private T _item_31_6;
    private T _item_31_7;
    private T _item_31_8;
    private T _item_31_9;
    private T _item_31_10;
    private T _item_31_11;
    private T _item_31_12;
    private T _item_31_13;
    private T _item_31_14;
    private T _item_31_15;

    public static Vector32x16<T> Create(T[,] array) {
      Vector32x16<T> vec = default;
      var src = array.AsSpan2D();
      var dest = vec.AsSpan2D();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i, int j]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j) = value;
    }

    public bool Equals(Vector32x16<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public Span2D<T> AsSpan2D() => Span2D<T>.DangerousCreate(ref Unsafe.AsRef(in _item_0_0), Height, Width, 1);

    public int Height => 32;

    public int Width => 16;
    
    public int Count => Height * Width;

    public static Vector32x16<T> operator +(Vector32x16<T> left, Vector32x16<T> right) {
        Vector32x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector32x16<T> operator -(Vector32x16<T> left, Vector32x16<T> right) {
        Vector32x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector32x16<T> operator *(Vector32x16<T> left, Vector32x16<T> right) {
        Vector32x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector32x16<T> operator /(Vector32x16<T> left, Vector32x16<T> right) {
        Vector32x16<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector32x32<T> : IEquatable<Vector32x32<T>>, IAdditionOperators<Vector32x32<T>, Vector32x32<T>, Vector32x32<T>>, ISubtractionOperators<Vector32x32<T>, Vector32x32<T>, Vector32x32<T>>, IMultiplyOperators<Vector32x32<T>, Vector32x32<T>, Vector32x32<T>>, IDivisionOperators<Vector32x32<T>, Vector32x32<T>, Vector32x32<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_0_16;
    private T _item_0_17;
    private T _item_0_18;
    private T _item_0_19;
    private T _item_0_20;
    private T _item_0_21;
    private T _item_0_22;
    private T _item_0_23;
    private T _item_0_24;
    private T _item_0_25;
    private T _item_0_26;
    private T _item_0_27;
    private T _item_0_28;
    private T _item_0_29;
    private T _item_0_30;
    private T _item_0_31;
    private T _item_1_0;
    private T _item_1_1;
    private T _item_1_2;
    private T _item_1_3;
    private T _item_1_4;
    private T _item_1_5;
    private T _item_1_6;
    private T _item_1_7;
    private T _item_1_8;
    private T _item_1_9;
    private T _item_1_10;
    private T _item_1_11;
    private T _item_1_12;
    private T _item_1_13;
    private T _item_1_14;
    private T _item_1_15;
    private T _item_1_16;
    private T _item_1_17;
    private T _item_1_18;
    private T _item_1_19;
    private T _item_1_20;
    private T _item_1_21;
    private T _item_1_22;
    private T _item_1_23;
    private T _item_1_24;
    private T _item_1_25;
    private T _item_1_26;
    private T _item_1_27;
    private T _item_1_28;
    private T _item_1_29;
    private T _item_1_30;
    private T _item_1_31;
    private T _item_2_0;
    private T _item_2_1;
    private T _item_2_2;
    private T _item_2_3;
    private T _item_2_4;
    private T _item_2_5;
    private T _item_2_6;
    private T _item_2_7;
    private T _item_2_8;
    private T _item_2_9;
    private T _item_2_10;
    private T _item_2_11;
    private T _item_2_12;
    private T _item_2_13;
    private T _item_2_14;
    private T _item_2_15;
    private T _item_2_16;
    private T _item_2_17;
    private T _item_2_18;
    private T _item_2_19;
    private T _item_2_20;
    private T _item_2_21;
    private T _item_2_22;
    private T _item_2_23;
    private T _item_2_24;
    private T _item_2_25;
    private T _item_2_26;
    private T _item_2_27;
    private T _item_2_28;
    private T _item_2_29;
    private T _item_2_30;
    private T _item_2_31;
    private T _item_3_0;
    private T _item_3_1;
    private T _item_3_2;
    private T _item_3_3;
    private T _item_3_4;
    private T _item_3_5;
    private T _item_3_6;
    private T _item_3_7;
    private T _item_3_8;
    private T _item_3_9;
    private T _item_3_10;
    private T _item_3_11;
    private T _item_3_12;
    private T _item_3_13;
    private T _item_3_14;
    private T _item_3_15;
    private T _item_3_16;
    private T _item_3_17;
    private T _item_3_18;
    private T _item_3_19;
    private T _item_3_20;
    private T _item_3_21;
    private T _item_3_22;
    private T _item_3_23;
    private T _item_3_24;
    private T _item_3_25;
    private T _item_3_26;
    private T _item_3_27;
    private T _item_3_28;
    private T _item_3_29;
    private T _item_3_30;
    private T _item_3_31;
    private T _item_4_0;
    private T _item_4_1;
    private T _item_4_2;
    private T _item_4_3;
    private T _item_4_4;
    private T _item_4_5;
    private T _item_4_6;
    private T _item_4_7;
    private T _item_4_8;
    private T _item_4_9;
    private T _item_4_10;
    private T _item_4_11;
    private T _item_4_12;
    private T _item_4_13;
    private T _item_4_14;
    private T _item_4_15;
    private T _item_4_16;
    private T _item_4_17;
    private T _item_4_18;
    private T _item_4_19;
    private T _item_4_20;
    private T _item_4_21;
    private T _item_4_22;
    private T _item_4_23;
    private T _item_4_24;
    private T _item_4_25;
    private T _item_4_26;
    private T _item_4_27;
    private T _item_4_28;
    private T _item_4_29;
    private T _item_4_30;
    private T _item_4_31;
    private T _item_5_0;
    private T _item_5_1;
    private T _item_5_2;
    private T _item_5_3;
    private T _item_5_4;
    private T _item_5_5;
    private T _item_5_6;
    private T _item_5_7;
    private T _item_5_8;
    private T _item_5_9;
    private T _item_5_10;
    private T _item_5_11;
    private T _item_5_12;
    private T _item_5_13;
    private T _item_5_14;
    private T _item_5_15;
    private T _item_5_16;
    private T _item_5_17;
    private T _item_5_18;
    private T _item_5_19;
    private T _item_5_20;
    private T _item_5_21;
    private T _item_5_22;
    private T _item_5_23;
    private T _item_5_24;
    private T _item_5_25;
    private T _item_5_26;
    private T _item_5_27;
    private T _item_5_28;
    private T _item_5_29;
    private T _item_5_30;
    private T _item_5_31;
    private T _item_6_0;
    private T _item_6_1;
    private T _item_6_2;
    private T _item_6_3;
    private T _item_6_4;
    private T _item_6_5;
    private T _item_6_6;
    private T _item_6_7;
    private T _item_6_8;
    private T _item_6_9;
    private T _item_6_10;
    private T _item_6_11;
    private T _item_6_12;
    private T _item_6_13;
    private T _item_6_14;
    private T _item_6_15;
    private T _item_6_16;
    private T _item_6_17;
    private T _item_6_18;
    private T _item_6_19;
    private T _item_6_20;
    private T _item_6_21;
    private T _item_6_22;
    private T _item_6_23;
    private T _item_6_24;
    private T _item_6_25;
    private T _item_6_26;
    private T _item_6_27;
    private T _item_6_28;
    private T _item_6_29;
    private T _item_6_30;
    private T _item_6_31;
    private T _item_7_0;
    private T _item_7_1;
    private T _item_7_2;
    private T _item_7_3;
    private T _item_7_4;
    private T _item_7_5;
    private T _item_7_6;
    private T _item_7_7;
    private T _item_7_8;
    private T _item_7_9;
    private T _item_7_10;
    private T _item_7_11;
    private T _item_7_12;
    private T _item_7_13;
    private T _item_7_14;
    private T _item_7_15;
    private T _item_7_16;
    private T _item_7_17;
    private T _item_7_18;
    private T _item_7_19;
    private T _item_7_20;
    private T _item_7_21;
    private T _item_7_22;
    private T _item_7_23;
    private T _item_7_24;
    private T _item_7_25;
    private T _item_7_26;
    private T _item_7_27;
    private T _item_7_28;
    private T _item_7_29;
    private T _item_7_30;
    private T _item_7_31;
    private T _item_8_0;
    private T _item_8_1;
    private T _item_8_2;
    private T _item_8_3;
    private T _item_8_4;
    private T _item_8_5;
    private T _item_8_6;
    private T _item_8_7;
    private T _item_8_8;
    private T _item_8_9;
    private T _item_8_10;
    private T _item_8_11;
    private T _item_8_12;
    private T _item_8_13;
    private T _item_8_14;
    private T _item_8_15;
    private T _item_8_16;
    private T _item_8_17;
    private T _item_8_18;
    private T _item_8_19;
    private T _item_8_20;
    private T _item_8_21;
    private T _item_8_22;
    private T _item_8_23;
    private T _item_8_24;
    private T _item_8_25;
    private T _item_8_26;
    private T _item_8_27;
    private T _item_8_28;
    private T _item_8_29;
    private T _item_8_30;
    private T _item_8_31;
    private T _item_9_0;
    private T _item_9_1;
    private T _item_9_2;
    private T _item_9_3;
    private T _item_9_4;
    private T _item_9_5;
    private T _item_9_6;
    private T _item_9_7;
    private T _item_9_8;
    private T _item_9_9;
    private T _item_9_10;
    private T _item_9_11;
    private T _item_9_12;
    private T _item_9_13;
    private T _item_9_14;
    private T _item_9_15;
    private T _item_9_16;
    private T _item_9_17;
    private T _item_9_18;
    private T _item_9_19;
    private T _item_9_20;
    private T _item_9_21;
    private T _item_9_22;
    private T _item_9_23;
    private T _item_9_24;
    private T _item_9_25;
    private T _item_9_26;
    private T _item_9_27;
    private T _item_9_28;
    private T _item_9_29;
    private T _item_9_30;
    private T _item_9_31;
    private T _item_10_0;
    private T _item_10_1;
    private T _item_10_2;
    private T _item_10_3;
    private T _item_10_4;
    private T _item_10_5;
    private T _item_10_6;
    private T _item_10_7;
    private T _item_10_8;
    private T _item_10_9;
    private T _item_10_10;
    private T _item_10_11;
    private T _item_10_12;
    private T _item_10_13;
    private T _item_10_14;
    private T _item_10_15;
    private T _item_10_16;
    private T _item_10_17;
    private T _item_10_18;
    private T _item_10_19;
    private T _item_10_20;
    private T _item_10_21;
    private T _item_10_22;
    private T _item_10_23;
    private T _item_10_24;
    private T _item_10_25;
    private T _item_10_26;
    private T _item_10_27;
    private T _item_10_28;
    private T _item_10_29;
    private T _item_10_30;
    private T _item_10_31;
    private T _item_11_0;
    private T _item_11_1;
    private T _item_11_2;
    private T _item_11_3;
    private T _item_11_4;
    private T _item_11_5;
    private T _item_11_6;
    private T _item_11_7;
    private T _item_11_8;
    private T _item_11_9;
    private T _item_11_10;
    private T _item_11_11;
    private T _item_11_12;
    private T _item_11_13;
    private T _item_11_14;
    private T _item_11_15;
    private T _item_11_16;
    private T _item_11_17;
    private T _item_11_18;
    private T _item_11_19;
    private T _item_11_20;
    private T _item_11_21;
    private T _item_11_22;
    private T _item_11_23;
    private T _item_11_24;
    private T _item_11_25;
    private T _item_11_26;
    private T _item_11_27;
    private T _item_11_28;
    private T _item_11_29;
    private T _item_11_30;
    private T _item_11_31;
    private T _item_12_0;
    private T _item_12_1;
    private T _item_12_2;
    private T _item_12_3;
    private T _item_12_4;
    private T _item_12_5;
    private T _item_12_6;
    private T _item_12_7;
    private T _item_12_8;
    private T _item_12_9;
    private T _item_12_10;
    private T _item_12_11;
    private T _item_12_12;
    private T _item_12_13;
    private T _item_12_14;
    private T _item_12_15;
    private T _item_12_16;
    private T _item_12_17;
    private T _item_12_18;
    private T _item_12_19;
    private T _item_12_20;
    private T _item_12_21;
    private T _item_12_22;
    private T _item_12_23;
    private T _item_12_24;
    private T _item_12_25;
    private T _item_12_26;
    private T _item_12_27;
    private T _item_12_28;
    private T _item_12_29;
    private T _item_12_30;
    private T _item_12_31;
    private T _item_13_0;
    private T _item_13_1;
    private T _item_13_2;
    private T _item_13_3;
    private T _item_13_4;
    private T _item_13_5;
    private T _item_13_6;
    private T _item_13_7;
    private T _item_13_8;
    private T _item_13_9;
    private T _item_13_10;
    private T _item_13_11;
    private T _item_13_12;
    private T _item_13_13;
    private T _item_13_14;
    private T _item_13_15;
    private T _item_13_16;
    private T _item_13_17;
    private T _item_13_18;
    private T _item_13_19;
    private T _item_13_20;
    private T _item_13_21;
    private T _item_13_22;
    private T _item_13_23;
    private T _item_13_24;
    private T _item_13_25;
    private T _item_13_26;
    private T _item_13_27;
    private T _item_13_28;
    private T _item_13_29;
    private T _item_13_30;
    private T _item_13_31;
    private T _item_14_0;
    private T _item_14_1;
    private T _item_14_2;
    private T _item_14_3;
    private T _item_14_4;
    private T _item_14_5;
    private T _item_14_6;
    private T _item_14_7;
    private T _item_14_8;
    private T _item_14_9;
    private T _item_14_10;
    private T _item_14_11;
    private T _item_14_12;
    private T _item_14_13;
    private T _item_14_14;
    private T _item_14_15;
    private T _item_14_16;
    private T _item_14_17;
    private T _item_14_18;
    private T _item_14_19;
    private T _item_14_20;
    private T _item_14_21;
    private T _item_14_22;
    private T _item_14_23;
    private T _item_14_24;
    private T _item_14_25;
    private T _item_14_26;
    private T _item_14_27;
    private T _item_14_28;
    private T _item_14_29;
    private T _item_14_30;
    private T _item_14_31;
    private T _item_15_0;
    private T _item_15_1;
    private T _item_15_2;
    private T _item_15_3;
    private T _item_15_4;
    private T _item_15_5;
    private T _item_15_6;
    private T _item_15_7;
    private T _item_15_8;
    private T _item_15_9;
    private T _item_15_10;
    private T _item_15_11;
    private T _item_15_12;
    private T _item_15_13;
    private T _item_15_14;
    private T _item_15_15;
    private T _item_15_16;
    private T _item_15_17;
    private T _item_15_18;
    private T _item_15_19;
    private T _item_15_20;
    private T _item_15_21;
    private T _item_15_22;
    private T _item_15_23;
    private T _item_15_24;
    private T _item_15_25;
    private T _item_15_26;
    private T _item_15_27;
    private T _item_15_28;
    private T _item_15_29;
    private T _item_15_30;
    private T _item_15_31;
    private T _item_16_0;
    private T _item_16_1;
    private T _item_16_2;
    private T _item_16_3;
    private T _item_16_4;
    private T _item_16_5;
    private T _item_16_6;
    private T _item_16_7;
    private T _item_16_8;
    private T _item_16_9;
    private T _item_16_10;
    private T _item_16_11;
    private T _item_16_12;
    private T _item_16_13;
    private T _item_16_14;
    private T _item_16_15;
    private T _item_16_16;
    private T _item_16_17;
    private T _item_16_18;
    private T _item_16_19;
    private T _item_16_20;
    private T _item_16_21;
    private T _item_16_22;
    private T _item_16_23;
    private T _item_16_24;
    private T _item_16_25;
    private T _item_16_26;
    private T _item_16_27;
    private T _item_16_28;
    private T _item_16_29;
    private T _item_16_30;
    private T _item_16_31;
    private T _item_17_0;
    private T _item_17_1;
    private T _item_17_2;
    private T _item_17_3;
    private T _item_17_4;
    private T _item_17_5;
    private T _item_17_6;
    private T _item_17_7;
    private T _item_17_8;
    private T _item_17_9;
    private T _item_17_10;
    private T _item_17_11;
    private T _item_17_12;
    private T _item_17_13;
    private T _item_17_14;
    private T _item_17_15;
    private T _item_17_16;
    private T _item_17_17;
    private T _item_17_18;
    private T _item_17_19;
    private T _item_17_20;
    private T _item_17_21;
    private T _item_17_22;
    private T _item_17_23;
    private T _item_17_24;
    private T _item_17_25;
    private T _item_17_26;
    private T _item_17_27;
    private T _item_17_28;
    private T _item_17_29;
    private T _item_17_30;
    private T _item_17_31;
    private T _item_18_0;
    private T _item_18_1;
    private T _item_18_2;
    private T _item_18_3;
    private T _item_18_4;
    private T _item_18_5;
    private T _item_18_6;
    private T _item_18_7;
    private T _item_18_8;
    private T _item_18_9;
    private T _item_18_10;
    private T _item_18_11;
    private T _item_18_12;
    private T _item_18_13;
    private T _item_18_14;
    private T _item_18_15;
    private T _item_18_16;
    private T _item_18_17;
    private T _item_18_18;
    private T _item_18_19;
    private T _item_18_20;
    private T _item_18_21;
    private T _item_18_22;
    private T _item_18_23;
    private T _item_18_24;
    private T _item_18_25;
    private T _item_18_26;
    private T _item_18_27;
    private T _item_18_28;
    private T _item_18_29;
    private T _item_18_30;
    private T _item_18_31;
    private T _item_19_0;
    private T _item_19_1;
    private T _item_19_2;
    private T _item_19_3;
    private T _item_19_4;
    private T _item_19_5;
    private T _item_19_6;
    private T _item_19_7;
    private T _item_19_8;
    private T _item_19_9;
    private T _item_19_10;
    private T _item_19_11;
    private T _item_19_12;
    private T _item_19_13;
    private T _item_19_14;
    private T _item_19_15;
    private T _item_19_16;
    private T _item_19_17;
    private T _item_19_18;
    private T _item_19_19;
    private T _item_19_20;
    private T _item_19_21;
    private T _item_19_22;
    private T _item_19_23;
    private T _item_19_24;
    private T _item_19_25;
    private T _item_19_26;
    private T _item_19_27;
    private T _item_19_28;
    private T _item_19_29;
    private T _item_19_30;
    private T _item_19_31;
    private T _item_20_0;
    private T _item_20_1;
    private T _item_20_2;
    private T _item_20_3;
    private T _item_20_4;
    private T _item_20_5;
    private T _item_20_6;
    private T _item_20_7;
    private T _item_20_8;
    private T _item_20_9;
    private T _item_20_10;
    private T _item_20_11;
    private T _item_20_12;
    private T _item_20_13;
    private T _item_20_14;
    private T _item_20_15;
    private T _item_20_16;
    private T _item_20_17;
    private T _item_20_18;
    private T _item_20_19;
    private T _item_20_20;
    private T _item_20_21;
    private T _item_20_22;
    private T _item_20_23;
    private T _item_20_24;
    private T _item_20_25;
    private T _item_20_26;
    private T _item_20_27;
    private T _item_20_28;
    private T _item_20_29;
    private T _item_20_30;
    private T _item_20_31;
    private T _item_21_0;
    private T _item_21_1;
    private T _item_21_2;
    private T _item_21_3;
    private T _item_21_4;
    private T _item_21_5;
    private T _item_21_6;
    private T _item_21_7;
    private T _item_21_8;
    private T _item_21_9;
    private T _item_21_10;
    private T _item_21_11;
    private T _item_21_12;
    private T _item_21_13;
    private T _item_21_14;
    private T _item_21_15;
    private T _item_21_16;
    private T _item_21_17;
    private T _item_21_18;
    private T _item_21_19;
    private T _item_21_20;
    private T _item_21_21;
    private T _item_21_22;
    private T _item_21_23;
    private T _item_21_24;
    private T _item_21_25;
    private T _item_21_26;
    private T _item_21_27;
    private T _item_21_28;
    private T _item_21_29;
    private T _item_21_30;
    private T _item_21_31;
    private T _item_22_0;
    private T _item_22_1;
    private T _item_22_2;
    private T _item_22_3;
    private T _item_22_4;
    private T _item_22_5;
    private T _item_22_6;
    private T _item_22_7;
    private T _item_22_8;
    private T _item_22_9;
    private T _item_22_10;
    private T _item_22_11;
    private T _item_22_12;
    private T _item_22_13;
    private T _item_22_14;
    private T _item_22_15;
    private T _item_22_16;
    private T _item_22_17;
    private T _item_22_18;
    private T _item_22_19;
    private T _item_22_20;
    private T _item_22_21;
    private T _item_22_22;
    private T _item_22_23;
    private T _item_22_24;
    private T _item_22_25;
    private T _item_22_26;
    private T _item_22_27;
    private T _item_22_28;
    private T _item_22_29;
    private T _item_22_30;
    private T _item_22_31;
    private T _item_23_0;
    private T _item_23_1;
    private T _item_23_2;
    private T _item_23_3;
    private T _item_23_4;
    private T _item_23_5;
    private T _item_23_6;
    private T _item_23_7;
    private T _item_23_8;
    private T _item_23_9;
    private T _item_23_10;
    private T _item_23_11;
    private T _item_23_12;
    private T _item_23_13;
    private T _item_23_14;
    private T _item_23_15;
    private T _item_23_16;
    private T _item_23_17;
    private T _item_23_18;
    private T _item_23_19;
    private T _item_23_20;
    private T _item_23_21;
    private T _item_23_22;
    private T _item_23_23;
    private T _item_23_24;
    private T _item_23_25;
    private T _item_23_26;
    private T _item_23_27;
    private T _item_23_28;
    private T _item_23_29;
    private T _item_23_30;
    private T _item_23_31;
    private T _item_24_0;
    private T _item_24_1;
    private T _item_24_2;
    private T _item_24_3;
    private T _item_24_4;
    private T _item_24_5;
    private T _item_24_6;
    private T _item_24_7;
    private T _item_24_8;
    private T _item_24_9;
    private T _item_24_10;
    private T _item_24_11;
    private T _item_24_12;
    private T _item_24_13;
    private T _item_24_14;
    private T _item_24_15;
    private T _item_24_16;
    private T _item_24_17;
    private T _item_24_18;
    private T _item_24_19;
    private T _item_24_20;
    private T _item_24_21;
    private T _item_24_22;
    private T _item_24_23;
    private T _item_24_24;
    private T _item_24_25;
    private T _item_24_26;
    private T _item_24_27;
    private T _item_24_28;
    private T _item_24_29;
    private T _item_24_30;
    private T _item_24_31;
    private T _item_25_0;
    private T _item_25_1;
    private T _item_25_2;
    private T _item_25_3;
    private T _item_25_4;
    private T _item_25_5;
    private T _item_25_6;
    private T _item_25_7;
    private T _item_25_8;
    private T _item_25_9;
    private T _item_25_10;
    private T _item_25_11;
    private T _item_25_12;
    private T _item_25_13;
    private T _item_25_14;
    private T _item_25_15;
    private T _item_25_16;
    private T _item_25_17;
    private T _item_25_18;
    private T _item_25_19;
    private T _item_25_20;
    private T _item_25_21;
    private T _item_25_22;
    private T _item_25_23;
    private T _item_25_24;
    private T _item_25_25;
    private T _item_25_26;
    private T _item_25_27;
    private T _item_25_28;
    private T _item_25_29;
    private T _item_25_30;
    private T _item_25_31;
    private T _item_26_0;
    private T _item_26_1;
    private T _item_26_2;
    private T _item_26_3;
    private T _item_26_4;
    private T _item_26_5;
    private T _item_26_6;
    private T _item_26_7;
    private T _item_26_8;
    private T _item_26_9;
    private T _item_26_10;
    private T _item_26_11;
    private T _item_26_12;
    private T _item_26_13;
    private T _item_26_14;
    private T _item_26_15;
    private T _item_26_16;
    private T _item_26_17;
    private T _item_26_18;
    private T _item_26_19;
    private T _item_26_20;
    private T _item_26_21;
    private T _item_26_22;
    private T _item_26_23;
    private T _item_26_24;
    private T _item_26_25;
    private T _item_26_26;
    private T _item_26_27;
    private T _item_26_28;
    private T _item_26_29;
    private T _item_26_30;
    private T _item_26_31;
    private T _item_27_0;
    private T _item_27_1;
    private T _item_27_2;
    private T _item_27_3;
    private T _item_27_4;
    private T _item_27_5;
    private T _item_27_6;
    private T _item_27_7;
    private T _item_27_8;
    private T _item_27_9;
    private T _item_27_10;
    private T _item_27_11;
    private T _item_27_12;
    private T _item_27_13;
    private T _item_27_14;
    private T _item_27_15;
    private T _item_27_16;
    private T _item_27_17;
    private T _item_27_18;
    private T _item_27_19;
    private T _item_27_20;
    private T _item_27_21;
    private T _item_27_22;
    private T _item_27_23;
    private T _item_27_24;
    private T _item_27_25;
    private T _item_27_26;
    private T _item_27_27;
    private T _item_27_28;
    private T _item_27_29;
    private T _item_27_30;
    private T _item_27_31;
    private T _item_28_0;
    private T _item_28_1;
    private T _item_28_2;
    private T _item_28_3;
    private T _item_28_4;
    private T _item_28_5;
    private T _item_28_6;
    private T _item_28_7;
    private T _item_28_8;
    private T _item_28_9;
    private T _item_28_10;
    private T _item_28_11;
    private T _item_28_12;
    private T _item_28_13;
    private T _item_28_14;
    private T _item_28_15;
    private T _item_28_16;
    private T _item_28_17;
    private T _item_28_18;
    private T _item_28_19;
    private T _item_28_20;
    private T _item_28_21;
    private T _item_28_22;
    private T _item_28_23;
    private T _item_28_24;
    private T _item_28_25;
    private T _item_28_26;
    private T _item_28_27;
    private T _item_28_28;
    private T _item_28_29;
    private T _item_28_30;
    private T _item_28_31;
    private T _item_29_0;
    private T _item_29_1;
    private T _item_29_2;
    private T _item_29_3;
    private T _item_29_4;
    private T _item_29_5;
    private T _item_29_6;
    private T _item_29_7;
    private T _item_29_8;
    private T _item_29_9;
    private T _item_29_10;
    private T _item_29_11;
    private T _item_29_12;
    private T _item_29_13;
    private T _item_29_14;
    private T _item_29_15;
    private T _item_29_16;
    private T _item_29_17;
    private T _item_29_18;
    private T _item_29_19;
    private T _item_29_20;
    private T _item_29_21;
    private T _item_29_22;
    private T _item_29_23;
    private T _item_29_24;
    private T _item_29_25;
    private T _item_29_26;
    private T _item_29_27;
    private T _item_29_28;
    private T _item_29_29;
    private T _item_29_30;
    private T _item_29_31;
    private T _item_30_0;
    private T _item_30_1;
    private T _item_30_2;
    private T _item_30_3;
    private T _item_30_4;
    private T _item_30_5;
    private T _item_30_6;
    private T _item_30_7;
    private T _item_30_8;
    private T _item_30_9;
    private T _item_30_10;
    private T _item_30_11;
    private T _item_30_12;
    private T _item_30_13;
    private T _item_30_14;
    private T _item_30_15;
    private T _item_30_16;
    private T _item_30_17;
    private T _item_30_18;
    private T _item_30_19;
    private T _item_30_20;
    private T _item_30_21;
    private T _item_30_22;
    private T _item_30_23;
    private T _item_30_24;
    private T _item_30_25;
    private T _item_30_26;
    private T _item_30_27;
    private T _item_30_28;
    private T _item_30_29;
    private T _item_30_30;
    private T _item_30_31;
    private T _item_31_0;
    private T _item_31_1;
    private T _item_31_2;
    private T _item_31_3;
    private T _item_31_4;
    private T _item_31_5;
    private T _item_31_6;
    private T _item_31_7;
    private T _item_31_8;
    private T _item_31_9;
    private T _item_31_10;
    private T _item_31_11;
    private T _item_31_12;
    private T _item_31_13;
    private T _item_31_14;
    private T _item_31_15;
    private T _item_31_16;
    private T _item_31_17;
    private T _item_31_18;
    private T _item_31_19;
    private T _item_31_20;
    private T _item_31_21;
    private T _item_31_22;
    private T _item_31_23;
    private T _item_31_24;
    private T _item_31_25;
    private T _item_31_26;
    private T _item_31_27;
    private T _item_31_28;
    private T _item_31_29;
    private T _item_31_30;
    private T _item_31_31;

    public static Vector32x32<T> Create(T[,] array) {
      Vector32x32<T> vec = default;
      var src = array.AsSpan2D();
      var dest = vec.AsSpan2D();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i, int j]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j) = value;
    }

    public bool Equals(Vector32x32<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public Span2D<T> AsSpan2D() => Span2D<T>.DangerousCreate(ref Unsafe.AsRef(in _item_0_0), Height, Width, 1);

    public int Height => 32;

    public int Width => 32;
    
    public int Count => Height * Width;

    public static Vector32x32<T> operator +(Vector32x32<T> left, Vector32x32<T> right) {
        Vector32x32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector32x32<T> operator -(Vector32x32<T> left, Vector32x32<T> right) {
        Vector32x32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector32x32<T> operator *(Vector32x32<T> left, Vector32x32<T> right) {
        Vector32x32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector32x32<T> operator /(Vector32x32<T> left, Vector32x32<T> right) {
        Vector32x32<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

[StructLayout(LayoutKind.Sequential)]
public unsafe struct Vector32x64<T> : IEquatable<Vector32x64<T>>, IAdditionOperators<Vector32x64<T>, Vector32x64<T>, Vector32x64<T>>, ISubtractionOperators<Vector32x64<T>, Vector32x64<T>, Vector32x64<T>>, IMultiplyOperators<Vector32x64<T>, Vector32x64<T>, Vector32x64<T>>, IDivisionOperators<Vector32x64<T>, Vector32x64<T>, Vector32x64<T>>
    where T : unmanaged, IEquatable<T>, INumber<T>
{
    private T _item_0_0;
    private T _item_0_1;
    private T _item_0_2;
    private T _item_0_3;
    private T _item_0_4;
    private T _item_0_5;
    private T _item_0_6;
    private T _item_0_7;
    private T _item_0_8;
    private T _item_0_9;
    private T _item_0_10;
    private T _item_0_11;
    private T _item_0_12;
    private T _item_0_13;
    private T _item_0_14;
    private T _item_0_15;
    private T _item_0_16;
    private T _item_0_17;
    private T _item_0_18;
    private T _item_0_19;
    private T _item_0_20;
    private T _item_0_21;
    private T _item_0_22;
    private T _item_0_23;
    private T _item_0_24;
    private T _item_0_25;
    private T _item_0_26;
    private T _item_0_27;
    private T _item_0_28;
    private T _item_0_29;
    private T _item_0_30;
    private T _item_0_31;
    private T _item_0_32;
    private T _item_0_33;
    private T _item_0_34;
    private T _item_0_35;
    private T _item_0_36;
    private T _item_0_37;
    private T _item_0_38;
    private T _item_0_39;
    private T _item_0_40;
    private T _item_0_41;
    private T _item_0_42;
    private T _item_0_43;
    private T _item_0_44;
    private T _item_0_45;
    private T _item_0_46;
    private T _item_0_47;
    private T _item_0_48;
    private T _item_0_49;
    private T _item_0_50;
    private T _item_0_51;
    private T _item_0_52;
    private T _item_0_53;
    private T _item_0_54;
    private T _item_0_55;
    private T _item_0_56;
    private T _item_0_57;
    private T _item_0_58;
    private T _item_0_59;
    private T _item_0_60;
    private T _item_0_61;
    private T _item_0_62;
    private T _item_0_63;
    private T _item_1_0;
    private T _item_1_1;
    private T _item_1_2;
    private T _item_1_3;
    private T _item_1_4;
    private T _item_1_5;
    private T _item_1_6;
    private T _item_1_7;
    private T _item_1_8;
    private T _item_1_9;
    private T _item_1_10;
    private T _item_1_11;
    private T _item_1_12;
    private T _item_1_13;
    private T _item_1_14;
    private T _item_1_15;
    private T _item_1_16;
    private T _item_1_17;
    private T _item_1_18;
    private T _item_1_19;
    private T _item_1_20;
    private T _item_1_21;
    private T _item_1_22;
    private T _item_1_23;
    private T _item_1_24;
    private T _item_1_25;
    private T _item_1_26;
    private T _item_1_27;
    private T _item_1_28;
    private T _item_1_29;
    private T _item_1_30;
    private T _item_1_31;
    private T _item_1_32;
    private T _item_1_33;
    private T _item_1_34;
    private T _item_1_35;
    private T _item_1_36;
    private T _item_1_37;
    private T _item_1_38;
    private T _item_1_39;
    private T _item_1_40;
    private T _item_1_41;
    private T _item_1_42;
    private T _item_1_43;
    private T _item_1_44;
    private T _item_1_45;
    private T _item_1_46;
    private T _item_1_47;
    private T _item_1_48;
    private T _item_1_49;
    private T _item_1_50;
    private T _item_1_51;
    private T _item_1_52;
    private T _item_1_53;
    private T _item_1_54;
    private T _item_1_55;
    private T _item_1_56;
    private T _item_1_57;
    private T _item_1_58;
    private T _item_1_59;
    private T _item_1_60;
    private T _item_1_61;
    private T _item_1_62;
    private T _item_1_63;
    private T _item_2_0;
    private T _item_2_1;
    private T _item_2_2;
    private T _item_2_3;
    private T _item_2_4;
    private T _item_2_5;
    private T _item_2_6;
    private T _item_2_7;
    private T _item_2_8;
    private T _item_2_9;
    private T _item_2_10;
    private T _item_2_11;
    private T _item_2_12;
    private T _item_2_13;
    private T _item_2_14;
    private T _item_2_15;
    private T _item_2_16;
    private T _item_2_17;
    private T _item_2_18;
    private T _item_2_19;
    private T _item_2_20;
    private T _item_2_21;
    private T _item_2_22;
    private T _item_2_23;
    private T _item_2_24;
    private T _item_2_25;
    private T _item_2_26;
    private T _item_2_27;
    private T _item_2_28;
    private T _item_2_29;
    private T _item_2_30;
    private T _item_2_31;
    private T _item_2_32;
    private T _item_2_33;
    private T _item_2_34;
    private T _item_2_35;
    private T _item_2_36;
    private T _item_2_37;
    private T _item_2_38;
    private T _item_2_39;
    private T _item_2_40;
    private T _item_2_41;
    private T _item_2_42;
    private T _item_2_43;
    private T _item_2_44;
    private T _item_2_45;
    private T _item_2_46;
    private T _item_2_47;
    private T _item_2_48;
    private T _item_2_49;
    private T _item_2_50;
    private T _item_2_51;
    private T _item_2_52;
    private T _item_2_53;
    private T _item_2_54;
    private T _item_2_55;
    private T _item_2_56;
    private T _item_2_57;
    private T _item_2_58;
    private T _item_2_59;
    private T _item_2_60;
    private T _item_2_61;
    private T _item_2_62;
    private T _item_2_63;
    private T _item_3_0;
    private T _item_3_1;
    private T _item_3_2;
    private T _item_3_3;
    private T _item_3_4;
    private T _item_3_5;
    private T _item_3_6;
    private T _item_3_7;
    private T _item_3_8;
    private T _item_3_9;
    private T _item_3_10;
    private T _item_3_11;
    private T _item_3_12;
    private T _item_3_13;
    private T _item_3_14;
    private T _item_3_15;
    private T _item_3_16;
    private T _item_3_17;
    private T _item_3_18;
    private T _item_3_19;
    private T _item_3_20;
    private T _item_3_21;
    private T _item_3_22;
    private T _item_3_23;
    private T _item_3_24;
    private T _item_3_25;
    private T _item_3_26;
    private T _item_3_27;
    private T _item_3_28;
    private T _item_3_29;
    private T _item_3_30;
    private T _item_3_31;
    private T _item_3_32;
    private T _item_3_33;
    private T _item_3_34;
    private T _item_3_35;
    private T _item_3_36;
    private T _item_3_37;
    private T _item_3_38;
    private T _item_3_39;
    private T _item_3_40;
    private T _item_3_41;
    private T _item_3_42;
    private T _item_3_43;
    private T _item_3_44;
    private T _item_3_45;
    private T _item_3_46;
    private T _item_3_47;
    private T _item_3_48;
    private T _item_3_49;
    private T _item_3_50;
    private T _item_3_51;
    private T _item_3_52;
    private T _item_3_53;
    private T _item_3_54;
    private T _item_3_55;
    private T _item_3_56;
    private T _item_3_57;
    private T _item_3_58;
    private T _item_3_59;
    private T _item_3_60;
    private T _item_3_61;
    private T _item_3_62;
    private T _item_3_63;
    private T _item_4_0;
    private T _item_4_1;
    private T _item_4_2;
    private T _item_4_3;
    private T _item_4_4;
    private T _item_4_5;
    private T _item_4_6;
    private T _item_4_7;
    private T _item_4_8;
    private T _item_4_9;
    private T _item_4_10;
    private T _item_4_11;
    private T _item_4_12;
    private T _item_4_13;
    private T _item_4_14;
    private T _item_4_15;
    private T _item_4_16;
    private T _item_4_17;
    private T _item_4_18;
    private T _item_4_19;
    private T _item_4_20;
    private T _item_4_21;
    private T _item_4_22;
    private T _item_4_23;
    private T _item_4_24;
    private T _item_4_25;
    private T _item_4_26;
    private T _item_4_27;
    private T _item_4_28;
    private T _item_4_29;
    private T _item_4_30;
    private T _item_4_31;
    private T _item_4_32;
    private T _item_4_33;
    private T _item_4_34;
    private T _item_4_35;
    private T _item_4_36;
    private T _item_4_37;
    private T _item_4_38;
    private T _item_4_39;
    private T _item_4_40;
    private T _item_4_41;
    private T _item_4_42;
    private T _item_4_43;
    private T _item_4_44;
    private T _item_4_45;
    private T _item_4_46;
    private T _item_4_47;
    private T _item_4_48;
    private T _item_4_49;
    private T _item_4_50;
    private T _item_4_51;
    private T _item_4_52;
    private T _item_4_53;
    private T _item_4_54;
    private T _item_4_55;
    private T _item_4_56;
    private T _item_4_57;
    private T _item_4_58;
    private T _item_4_59;
    private T _item_4_60;
    private T _item_4_61;
    private T _item_4_62;
    private T _item_4_63;
    private T _item_5_0;
    private T _item_5_1;
    private T _item_5_2;
    private T _item_5_3;
    private T _item_5_4;
    private T _item_5_5;
    private T _item_5_6;
    private T _item_5_7;
    private T _item_5_8;
    private T _item_5_9;
    private T _item_5_10;
    private T _item_5_11;
    private T _item_5_12;
    private T _item_5_13;
    private T _item_5_14;
    private T _item_5_15;
    private T _item_5_16;
    private T _item_5_17;
    private T _item_5_18;
    private T _item_5_19;
    private T _item_5_20;
    private T _item_5_21;
    private T _item_5_22;
    private T _item_5_23;
    private T _item_5_24;
    private T _item_5_25;
    private T _item_5_26;
    private T _item_5_27;
    private T _item_5_28;
    private T _item_5_29;
    private T _item_5_30;
    private T _item_5_31;
    private T _item_5_32;
    private T _item_5_33;
    private T _item_5_34;
    private T _item_5_35;
    private T _item_5_36;
    private T _item_5_37;
    private T _item_5_38;
    private T _item_5_39;
    private T _item_5_40;
    private T _item_5_41;
    private T _item_5_42;
    private T _item_5_43;
    private T _item_5_44;
    private T _item_5_45;
    private T _item_5_46;
    private T _item_5_47;
    private T _item_5_48;
    private T _item_5_49;
    private T _item_5_50;
    private T _item_5_51;
    private T _item_5_52;
    private T _item_5_53;
    private T _item_5_54;
    private T _item_5_55;
    private T _item_5_56;
    private T _item_5_57;
    private T _item_5_58;
    private T _item_5_59;
    private T _item_5_60;
    private T _item_5_61;
    private T _item_5_62;
    private T _item_5_63;
    private T _item_6_0;
    private T _item_6_1;
    private T _item_6_2;
    private T _item_6_3;
    private T _item_6_4;
    private T _item_6_5;
    private T _item_6_6;
    private T _item_6_7;
    private T _item_6_8;
    private T _item_6_9;
    private T _item_6_10;
    private T _item_6_11;
    private T _item_6_12;
    private T _item_6_13;
    private T _item_6_14;
    private T _item_6_15;
    private T _item_6_16;
    private T _item_6_17;
    private T _item_6_18;
    private T _item_6_19;
    private T _item_6_20;
    private T _item_6_21;
    private T _item_6_22;
    private T _item_6_23;
    private T _item_6_24;
    private T _item_6_25;
    private T _item_6_26;
    private T _item_6_27;
    private T _item_6_28;
    private T _item_6_29;
    private T _item_6_30;
    private T _item_6_31;
    private T _item_6_32;
    private T _item_6_33;
    private T _item_6_34;
    private T _item_6_35;
    private T _item_6_36;
    private T _item_6_37;
    private T _item_6_38;
    private T _item_6_39;
    private T _item_6_40;
    private T _item_6_41;
    private T _item_6_42;
    private T _item_6_43;
    private T _item_6_44;
    private T _item_6_45;
    private T _item_6_46;
    private T _item_6_47;
    private T _item_6_48;
    private T _item_6_49;
    private T _item_6_50;
    private T _item_6_51;
    private T _item_6_52;
    private T _item_6_53;
    private T _item_6_54;
    private T _item_6_55;
    private T _item_6_56;
    private T _item_6_57;
    private T _item_6_58;
    private T _item_6_59;
    private T _item_6_60;
    private T _item_6_61;
    private T _item_6_62;
    private T _item_6_63;
    private T _item_7_0;
    private T _item_7_1;
    private T _item_7_2;
    private T _item_7_3;
    private T _item_7_4;
    private T _item_7_5;
    private T _item_7_6;
    private T _item_7_7;
    private T _item_7_8;
    private T _item_7_9;
    private T _item_7_10;
    private T _item_7_11;
    private T _item_7_12;
    private T _item_7_13;
    private T _item_7_14;
    private T _item_7_15;
    private T _item_7_16;
    private T _item_7_17;
    private T _item_7_18;
    private T _item_7_19;
    private T _item_7_20;
    private T _item_7_21;
    private T _item_7_22;
    private T _item_7_23;
    private T _item_7_24;
    private T _item_7_25;
    private T _item_7_26;
    private T _item_7_27;
    private T _item_7_28;
    private T _item_7_29;
    private T _item_7_30;
    private T _item_7_31;
    private T _item_7_32;
    private T _item_7_33;
    private T _item_7_34;
    private T _item_7_35;
    private T _item_7_36;
    private T _item_7_37;
    private T _item_7_38;
    private T _item_7_39;
    private T _item_7_40;
    private T _item_7_41;
    private T _item_7_42;
    private T _item_7_43;
    private T _item_7_44;
    private T _item_7_45;
    private T _item_7_46;
    private T _item_7_47;
    private T _item_7_48;
    private T _item_7_49;
    private T _item_7_50;
    private T _item_7_51;
    private T _item_7_52;
    private T _item_7_53;
    private T _item_7_54;
    private T _item_7_55;
    private T _item_7_56;
    private T _item_7_57;
    private T _item_7_58;
    private T _item_7_59;
    private T _item_7_60;
    private T _item_7_61;
    private T _item_7_62;
    private T _item_7_63;
    private T _item_8_0;
    private T _item_8_1;
    private T _item_8_2;
    private T _item_8_3;
    private T _item_8_4;
    private T _item_8_5;
    private T _item_8_6;
    private T _item_8_7;
    private T _item_8_8;
    private T _item_8_9;
    private T _item_8_10;
    private T _item_8_11;
    private T _item_8_12;
    private T _item_8_13;
    private T _item_8_14;
    private T _item_8_15;
    private T _item_8_16;
    private T _item_8_17;
    private T _item_8_18;
    private T _item_8_19;
    private T _item_8_20;
    private T _item_8_21;
    private T _item_8_22;
    private T _item_8_23;
    private T _item_8_24;
    private T _item_8_25;
    private T _item_8_26;
    private T _item_8_27;
    private T _item_8_28;
    private T _item_8_29;
    private T _item_8_30;
    private T _item_8_31;
    private T _item_8_32;
    private T _item_8_33;
    private T _item_8_34;
    private T _item_8_35;
    private T _item_8_36;
    private T _item_8_37;
    private T _item_8_38;
    private T _item_8_39;
    private T _item_8_40;
    private T _item_8_41;
    private T _item_8_42;
    private T _item_8_43;
    private T _item_8_44;
    private T _item_8_45;
    private T _item_8_46;
    private T _item_8_47;
    private T _item_8_48;
    private T _item_8_49;
    private T _item_8_50;
    private T _item_8_51;
    private T _item_8_52;
    private T _item_8_53;
    private T _item_8_54;
    private T _item_8_55;
    private T _item_8_56;
    private T _item_8_57;
    private T _item_8_58;
    private T _item_8_59;
    private T _item_8_60;
    private T _item_8_61;
    private T _item_8_62;
    private T _item_8_63;
    private T _item_9_0;
    private T _item_9_1;
    private T _item_9_2;
    private T _item_9_3;
    private T _item_9_4;
    private T _item_9_5;
    private T _item_9_6;
    private T _item_9_7;
    private T _item_9_8;
    private T _item_9_9;
    private T _item_9_10;
    private T _item_9_11;
    private T _item_9_12;
    private T _item_9_13;
    private T _item_9_14;
    private T _item_9_15;
    private T _item_9_16;
    private T _item_9_17;
    private T _item_9_18;
    private T _item_9_19;
    private T _item_9_20;
    private T _item_9_21;
    private T _item_9_22;
    private T _item_9_23;
    private T _item_9_24;
    private T _item_9_25;
    private T _item_9_26;
    private T _item_9_27;
    private T _item_9_28;
    private T _item_9_29;
    private T _item_9_30;
    private T _item_9_31;
    private T _item_9_32;
    private T _item_9_33;
    private T _item_9_34;
    private T _item_9_35;
    private T _item_9_36;
    private T _item_9_37;
    private T _item_9_38;
    private T _item_9_39;
    private T _item_9_40;
    private T _item_9_41;
    private T _item_9_42;
    private T _item_9_43;
    private T _item_9_44;
    private T _item_9_45;
    private T _item_9_46;
    private T _item_9_47;
    private T _item_9_48;
    private T _item_9_49;
    private T _item_9_50;
    private T _item_9_51;
    private T _item_9_52;
    private T _item_9_53;
    private T _item_9_54;
    private T _item_9_55;
    private T _item_9_56;
    private T _item_9_57;
    private T _item_9_58;
    private T _item_9_59;
    private T _item_9_60;
    private T _item_9_61;
    private T _item_9_62;
    private T _item_9_63;
    private T _item_10_0;
    private T _item_10_1;
    private T _item_10_2;
    private T _item_10_3;
    private T _item_10_4;
    private T _item_10_5;
    private T _item_10_6;
    private T _item_10_7;
    private T _item_10_8;
    private T _item_10_9;
    private T _item_10_10;
    private T _item_10_11;
    private T _item_10_12;
    private T _item_10_13;
    private T _item_10_14;
    private T _item_10_15;
    private T _item_10_16;
    private T _item_10_17;
    private T _item_10_18;
    private T _item_10_19;
    private T _item_10_20;
    private T _item_10_21;
    private T _item_10_22;
    private T _item_10_23;
    private T _item_10_24;
    private T _item_10_25;
    private T _item_10_26;
    private T _item_10_27;
    private T _item_10_28;
    private T _item_10_29;
    private T _item_10_30;
    private T _item_10_31;
    private T _item_10_32;
    private T _item_10_33;
    private T _item_10_34;
    private T _item_10_35;
    private T _item_10_36;
    private T _item_10_37;
    private T _item_10_38;
    private T _item_10_39;
    private T _item_10_40;
    private T _item_10_41;
    private T _item_10_42;
    private T _item_10_43;
    private T _item_10_44;
    private T _item_10_45;
    private T _item_10_46;
    private T _item_10_47;
    private T _item_10_48;
    private T _item_10_49;
    private T _item_10_50;
    private T _item_10_51;
    private T _item_10_52;
    private T _item_10_53;
    private T _item_10_54;
    private T _item_10_55;
    private T _item_10_56;
    private T _item_10_57;
    private T _item_10_58;
    private T _item_10_59;
    private T _item_10_60;
    private T _item_10_61;
    private T _item_10_62;
    private T _item_10_63;
    private T _item_11_0;
    private T _item_11_1;
    private T _item_11_2;
    private T _item_11_3;
    private T _item_11_4;
    private T _item_11_5;
    private T _item_11_6;
    private T _item_11_7;
    private T _item_11_8;
    private T _item_11_9;
    private T _item_11_10;
    private T _item_11_11;
    private T _item_11_12;
    private T _item_11_13;
    private T _item_11_14;
    private T _item_11_15;
    private T _item_11_16;
    private T _item_11_17;
    private T _item_11_18;
    private T _item_11_19;
    private T _item_11_20;
    private T _item_11_21;
    private T _item_11_22;
    private T _item_11_23;
    private T _item_11_24;
    private T _item_11_25;
    private T _item_11_26;
    private T _item_11_27;
    private T _item_11_28;
    private T _item_11_29;
    private T _item_11_30;
    private T _item_11_31;
    private T _item_11_32;
    private T _item_11_33;
    private T _item_11_34;
    private T _item_11_35;
    private T _item_11_36;
    private T _item_11_37;
    private T _item_11_38;
    private T _item_11_39;
    private T _item_11_40;
    private T _item_11_41;
    private T _item_11_42;
    private T _item_11_43;
    private T _item_11_44;
    private T _item_11_45;
    private T _item_11_46;
    private T _item_11_47;
    private T _item_11_48;
    private T _item_11_49;
    private T _item_11_50;
    private T _item_11_51;
    private T _item_11_52;
    private T _item_11_53;
    private T _item_11_54;
    private T _item_11_55;
    private T _item_11_56;
    private T _item_11_57;
    private T _item_11_58;
    private T _item_11_59;
    private T _item_11_60;
    private T _item_11_61;
    private T _item_11_62;
    private T _item_11_63;
    private T _item_12_0;
    private T _item_12_1;
    private T _item_12_2;
    private T _item_12_3;
    private T _item_12_4;
    private T _item_12_5;
    private T _item_12_6;
    private T _item_12_7;
    private T _item_12_8;
    private T _item_12_9;
    private T _item_12_10;
    private T _item_12_11;
    private T _item_12_12;
    private T _item_12_13;
    private T _item_12_14;
    private T _item_12_15;
    private T _item_12_16;
    private T _item_12_17;
    private T _item_12_18;
    private T _item_12_19;
    private T _item_12_20;
    private T _item_12_21;
    private T _item_12_22;
    private T _item_12_23;
    private T _item_12_24;
    private T _item_12_25;
    private T _item_12_26;
    private T _item_12_27;
    private T _item_12_28;
    private T _item_12_29;
    private T _item_12_30;
    private T _item_12_31;
    private T _item_12_32;
    private T _item_12_33;
    private T _item_12_34;
    private T _item_12_35;
    private T _item_12_36;
    private T _item_12_37;
    private T _item_12_38;
    private T _item_12_39;
    private T _item_12_40;
    private T _item_12_41;
    private T _item_12_42;
    private T _item_12_43;
    private T _item_12_44;
    private T _item_12_45;
    private T _item_12_46;
    private T _item_12_47;
    private T _item_12_48;
    private T _item_12_49;
    private T _item_12_50;
    private T _item_12_51;
    private T _item_12_52;
    private T _item_12_53;
    private T _item_12_54;
    private T _item_12_55;
    private T _item_12_56;
    private T _item_12_57;
    private T _item_12_58;
    private T _item_12_59;
    private T _item_12_60;
    private T _item_12_61;
    private T _item_12_62;
    private T _item_12_63;
    private T _item_13_0;
    private T _item_13_1;
    private T _item_13_2;
    private T _item_13_3;
    private T _item_13_4;
    private T _item_13_5;
    private T _item_13_6;
    private T _item_13_7;
    private T _item_13_8;
    private T _item_13_9;
    private T _item_13_10;
    private T _item_13_11;
    private T _item_13_12;
    private T _item_13_13;
    private T _item_13_14;
    private T _item_13_15;
    private T _item_13_16;
    private T _item_13_17;
    private T _item_13_18;
    private T _item_13_19;
    private T _item_13_20;
    private T _item_13_21;
    private T _item_13_22;
    private T _item_13_23;
    private T _item_13_24;
    private T _item_13_25;
    private T _item_13_26;
    private T _item_13_27;
    private T _item_13_28;
    private T _item_13_29;
    private T _item_13_30;
    private T _item_13_31;
    private T _item_13_32;
    private T _item_13_33;
    private T _item_13_34;
    private T _item_13_35;
    private T _item_13_36;
    private T _item_13_37;
    private T _item_13_38;
    private T _item_13_39;
    private T _item_13_40;
    private T _item_13_41;
    private T _item_13_42;
    private T _item_13_43;
    private T _item_13_44;
    private T _item_13_45;
    private T _item_13_46;
    private T _item_13_47;
    private T _item_13_48;
    private T _item_13_49;
    private T _item_13_50;
    private T _item_13_51;
    private T _item_13_52;
    private T _item_13_53;
    private T _item_13_54;
    private T _item_13_55;
    private T _item_13_56;
    private T _item_13_57;
    private T _item_13_58;
    private T _item_13_59;
    private T _item_13_60;
    private T _item_13_61;
    private T _item_13_62;
    private T _item_13_63;
    private T _item_14_0;
    private T _item_14_1;
    private T _item_14_2;
    private T _item_14_3;
    private T _item_14_4;
    private T _item_14_5;
    private T _item_14_6;
    private T _item_14_7;
    private T _item_14_8;
    private T _item_14_9;
    private T _item_14_10;
    private T _item_14_11;
    private T _item_14_12;
    private T _item_14_13;
    private T _item_14_14;
    private T _item_14_15;
    private T _item_14_16;
    private T _item_14_17;
    private T _item_14_18;
    private T _item_14_19;
    private T _item_14_20;
    private T _item_14_21;
    private T _item_14_22;
    private T _item_14_23;
    private T _item_14_24;
    private T _item_14_25;
    private T _item_14_26;
    private T _item_14_27;
    private T _item_14_28;
    private T _item_14_29;
    private T _item_14_30;
    private T _item_14_31;
    private T _item_14_32;
    private T _item_14_33;
    private T _item_14_34;
    private T _item_14_35;
    private T _item_14_36;
    private T _item_14_37;
    private T _item_14_38;
    private T _item_14_39;
    private T _item_14_40;
    private T _item_14_41;
    private T _item_14_42;
    private T _item_14_43;
    private T _item_14_44;
    private T _item_14_45;
    private T _item_14_46;
    private T _item_14_47;
    private T _item_14_48;
    private T _item_14_49;
    private T _item_14_50;
    private T _item_14_51;
    private T _item_14_52;
    private T _item_14_53;
    private T _item_14_54;
    private T _item_14_55;
    private T _item_14_56;
    private T _item_14_57;
    private T _item_14_58;
    private T _item_14_59;
    private T _item_14_60;
    private T _item_14_61;
    private T _item_14_62;
    private T _item_14_63;
    private T _item_15_0;
    private T _item_15_1;
    private T _item_15_2;
    private T _item_15_3;
    private T _item_15_4;
    private T _item_15_5;
    private T _item_15_6;
    private T _item_15_7;
    private T _item_15_8;
    private T _item_15_9;
    private T _item_15_10;
    private T _item_15_11;
    private T _item_15_12;
    private T _item_15_13;
    private T _item_15_14;
    private T _item_15_15;
    private T _item_15_16;
    private T _item_15_17;
    private T _item_15_18;
    private T _item_15_19;
    private T _item_15_20;
    private T _item_15_21;
    private T _item_15_22;
    private T _item_15_23;
    private T _item_15_24;
    private T _item_15_25;
    private T _item_15_26;
    private T _item_15_27;
    private T _item_15_28;
    private T _item_15_29;
    private T _item_15_30;
    private T _item_15_31;
    private T _item_15_32;
    private T _item_15_33;
    private T _item_15_34;
    private T _item_15_35;
    private T _item_15_36;
    private T _item_15_37;
    private T _item_15_38;
    private T _item_15_39;
    private T _item_15_40;
    private T _item_15_41;
    private T _item_15_42;
    private T _item_15_43;
    private T _item_15_44;
    private T _item_15_45;
    private T _item_15_46;
    private T _item_15_47;
    private T _item_15_48;
    private T _item_15_49;
    private T _item_15_50;
    private T _item_15_51;
    private T _item_15_52;
    private T _item_15_53;
    private T _item_15_54;
    private T _item_15_55;
    private T _item_15_56;
    private T _item_15_57;
    private T _item_15_58;
    private T _item_15_59;
    private T _item_15_60;
    private T _item_15_61;
    private T _item_15_62;
    private T _item_15_63;
    private T _item_16_0;
    private T _item_16_1;
    private T _item_16_2;
    private T _item_16_3;
    private T _item_16_4;
    private T _item_16_5;
    private T _item_16_6;
    private T _item_16_7;
    private T _item_16_8;
    private T _item_16_9;
    private T _item_16_10;
    private T _item_16_11;
    private T _item_16_12;
    private T _item_16_13;
    private T _item_16_14;
    private T _item_16_15;
    private T _item_16_16;
    private T _item_16_17;
    private T _item_16_18;
    private T _item_16_19;
    private T _item_16_20;
    private T _item_16_21;
    private T _item_16_22;
    private T _item_16_23;
    private T _item_16_24;
    private T _item_16_25;
    private T _item_16_26;
    private T _item_16_27;
    private T _item_16_28;
    private T _item_16_29;
    private T _item_16_30;
    private T _item_16_31;
    private T _item_16_32;
    private T _item_16_33;
    private T _item_16_34;
    private T _item_16_35;
    private T _item_16_36;
    private T _item_16_37;
    private T _item_16_38;
    private T _item_16_39;
    private T _item_16_40;
    private T _item_16_41;
    private T _item_16_42;
    private T _item_16_43;
    private T _item_16_44;
    private T _item_16_45;
    private T _item_16_46;
    private T _item_16_47;
    private T _item_16_48;
    private T _item_16_49;
    private T _item_16_50;
    private T _item_16_51;
    private T _item_16_52;
    private T _item_16_53;
    private T _item_16_54;
    private T _item_16_55;
    private T _item_16_56;
    private T _item_16_57;
    private T _item_16_58;
    private T _item_16_59;
    private T _item_16_60;
    private T _item_16_61;
    private T _item_16_62;
    private T _item_16_63;
    private T _item_17_0;
    private T _item_17_1;
    private T _item_17_2;
    private T _item_17_3;
    private T _item_17_4;
    private T _item_17_5;
    private T _item_17_6;
    private T _item_17_7;
    private T _item_17_8;
    private T _item_17_9;
    private T _item_17_10;
    private T _item_17_11;
    private T _item_17_12;
    private T _item_17_13;
    private T _item_17_14;
    private T _item_17_15;
    private T _item_17_16;
    private T _item_17_17;
    private T _item_17_18;
    private T _item_17_19;
    private T _item_17_20;
    private T _item_17_21;
    private T _item_17_22;
    private T _item_17_23;
    private T _item_17_24;
    private T _item_17_25;
    private T _item_17_26;
    private T _item_17_27;
    private T _item_17_28;
    private T _item_17_29;
    private T _item_17_30;
    private T _item_17_31;
    private T _item_17_32;
    private T _item_17_33;
    private T _item_17_34;
    private T _item_17_35;
    private T _item_17_36;
    private T _item_17_37;
    private T _item_17_38;
    private T _item_17_39;
    private T _item_17_40;
    private T _item_17_41;
    private T _item_17_42;
    private T _item_17_43;
    private T _item_17_44;
    private T _item_17_45;
    private T _item_17_46;
    private T _item_17_47;
    private T _item_17_48;
    private T _item_17_49;
    private T _item_17_50;
    private T _item_17_51;
    private T _item_17_52;
    private T _item_17_53;
    private T _item_17_54;
    private T _item_17_55;
    private T _item_17_56;
    private T _item_17_57;
    private T _item_17_58;
    private T _item_17_59;
    private T _item_17_60;
    private T _item_17_61;
    private T _item_17_62;
    private T _item_17_63;
    private T _item_18_0;
    private T _item_18_1;
    private T _item_18_2;
    private T _item_18_3;
    private T _item_18_4;
    private T _item_18_5;
    private T _item_18_6;
    private T _item_18_7;
    private T _item_18_8;
    private T _item_18_9;
    private T _item_18_10;
    private T _item_18_11;
    private T _item_18_12;
    private T _item_18_13;
    private T _item_18_14;
    private T _item_18_15;
    private T _item_18_16;
    private T _item_18_17;
    private T _item_18_18;
    private T _item_18_19;
    private T _item_18_20;
    private T _item_18_21;
    private T _item_18_22;
    private T _item_18_23;
    private T _item_18_24;
    private T _item_18_25;
    private T _item_18_26;
    private T _item_18_27;
    private T _item_18_28;
    private T _item_18_29;
    private T _item_18_30;
    private T _item_18_31;
    private T _item_18_32;
    private T _item_18_33;
    private T _item_18_34;
    private T _item_18_35;
    private T _item_18_36;
    private T _item_18_37;
    private T _item_18_38;
    private T _item_18_39;
    private T _item_18_40;
    private T _item_18_41;
    private T _item_18_42;
    private T _item_18_43;
    private T _item_18_44;
    private T _item_18_45;
    private T _item_18_46;
    private T _item_18_47;
    private T _item_18_48;
    private T _item_18_49;
    private T _item_18_50;
    private T _item_18_51;
    private T _item_18_52;
    private T _item_18_53;
    private T _item_18_54;
    private T _item_18_55;
    private T _item_18_56;
    private T _item_18_57;
    private T _item_18_58;
    private T _item_18_59;
    private T _item_18_60;
    private T _item_18_61;
    private T _item_18_62;
    private T _item_18_63;
    private T _item_19_0;
    private T _item_19_1;
    private T _item_19_2;
    private T _item_19_3;
    private T _item_19_4;
    private T _item_19_5;
    private T _item_19_6;
    private T _item_19_7;
    private T _item_19_8;
    private T _item_19_9;
    private T _item_19_10;
    private T _item_19_11;
    private T _item_19_12;
    private T _item_19_13;
    private T _item_19_14;
    private T _item_19_15;
    private T _item_19_16;
    private T _item_19_17;
    private T _item_19_18;
    private T _item_19_19;
    private T _item_19_20;
    private T _item_19_21;
    private T _item_19_22;
    private T _item_19_23;
    private T _item_19_24;
    private T _item_19_25;
    private T _item_19_26;
    private T _item_19_27;
    private T _item_19_28;
    private T _item_19_29;
    private T _item_19_30;
    private T _item_19_31;
    private T _item_19_32;
    private T _item_19_33;
    private T _item_19_34;
    private T _item_19_35;
    private T _item_19_36;
    private T _item_19_37;
    private T _item_19_38;
    private T _item_19_39;
    private T _item_19_40;
    private T _item_19_41;
    private T _item_19_42;
    private T _item_19_43;
    private T _item_19_44;
    private T _item_19_45;
    private T _item_19_46;
    private T _item_19_47;
    private T _item_19_48;
    private T _item_19_49;
    private T _item_19_50;
    private T _item_19_51;
    private T _item_19_52;
    private T _item_19_53;
    private T _item_19_54;
    private T _item_19_55;
    private T _item_19_56;
    private T _item_19_57;
    private T _item_19_58;
    private T _item_19_59;
    private T _item_19_60;
    private T _item_19_61;
    private T _item_19_62;
    private T _item_19_63;
    private T _item_20_0;
    private T _item_20_1;
    private T _item_20_2;
    private T _item_20_3;
    private T _item_20_4;
    private T _item_20_5;
    private T _item_20_6;
    private T _item_20_7;
    private T _item_20_8;
    private T _item_20_9;
    private T _item_20_10;
    private T _item_20_11;
    private T _item_20_12;
    private T _item_20_13;
    private T _item_20_14;
    private T _item_20_15;
    private T _item_20_16;
    private T _item_20_17;
    private T _item_20_18;
    private T _item_20_19;
    private T _item_20_20;
    private T _item_20_21;
    private T _item_20_22;
    private T _item_20_23;
    private T _item_20_24;
    private T _item_20_25;
    private T _item_20_26;
    private T _item_20_27;
    private T _item_20_28;
    private T _item_20_29;
    private T _item_20_30;
    private T _item_20_31;
    private T _item_20_32;
    private T _item_20_33;
    private T _item_20_34;
    private T _item_20_35;
    private T _item_20_36;
    private T _item_20_37;
    private T _item_20_38;
    private T _item_20_39;
    private T _item_20_40;
    private T _item_20_41;
    private T _item_20_42;
    private T _item_20_43;
    private T _item_20_44;
    private T _item_20_45;
    private T _item_20_46;
    private T _item_20_47;
    private T _item_20_48;
    private T _item_20_49;
    private T _item_20_50;
    private T _item_20_51;
    private T _item_20_52;
    private T _item_20_53;
    private T _item_20_54;
    private T _item_20_55;
    private T _item_20_56;
    private T _item_20_57;
    private T _item_20_58;
    private T _item_20_59;
    private T _item_20_60;
    private T _item_20_61;
    private T _item_20_62;
    private T _item_20_63;
    private T _item_21_0;
    private T _item_21_1;
    private T _item_21_2;
    private T _item_21_3;
    private T _item_21_4;
    private T _item_21_5;
    private T _item_21_6;
    private T _item_21_7;
    private T _item_21_8;
    private T _item_21_9;
    private T _item_21_10;
    private T _item_21_11;
    private T _item_21_12;
    private T _item_21_13;
    private T _item_21_14;
    private T _item_21_15;
    private T _item_21_16;
    private T _item_21_17;
    private T _item_21_18;
    private T _item_21_19;
    private T _item_21_20;
    private T _item_21_21;
    private T _item_21_22;
    private T _item_21_23;
    private T _item_21_24;
    private T _item_21_25;
    private T _item_21_26;
    private T _item_21_27;
    private T _item_21_28;
    private T _item_21_29;
    private T _item_21_30;
    private T _item_21_31;
    private T _item_21_32;
    private T _item_21_33;
    private T _item_21_34;
    private T _item_21_35;
    private T _item_21_36;
    private T _item_21_37;
    private T _item_21_38;
    private T _item_21_39;
    private T _item_21_40;
    private T _item_21_41;
    private T _item_21_42;
    private T _item_21_43;
    private T _item_21_44;
    private T _item_21_45;
    private T _item_21_46;
    private T _item_21_47;
    private T _item_21_48;
    private T _item_21_49;
    private T _item_21_50;
    private T _item_21_51;
    private T _item_21_52;
    private T _item_21_53;
    private T _item_21_54;
    private T _item_21_55;
    private T _item_21_56;
    private T _item_21_57;
    private T _item_21_58;
    private T _item_21_59;
    private T _item_21_60;
    private T _item_21_61;
    private T _item_21_62;
    private T _item_21_63;
    private T _item_22_0;
    private T _item_22_1;
    private T _item_22_2;
    private T _item_22_3;
    private T _item_22_4;
    private T _item_22_5;
    private T _item_22_6;
    private T _item_22_7;
    private T _item_22_8;
    private T _item_22_9;
    private T _item_22_10;
    private T _item_22_11;
    private T _item_22_12;
    private T _item_22_13;
    private T _item_22_14;
    private T _item_22_15;
    private T _item_22_16;
    private T _item_22_17;
    private T _item_22_18;
    private T _item_22_19;
    private T _item_22_20;
    private T _item_22_21;
    private T _item_22_22;
    private T _item_22_23;
    private T _item_22_24;
    private T _item_22_25;
    private T _item_22_26;
    private T _item_22_27;
    private T _item_22_28;
    private T _item_22_29;
    private T _item_22_30;
    private T _item_22_31;
    private T _item_22_32;
    private T _item_22_33;
    private T _item_22_34;
    private T _item_22_35;
    private T _item_22_36;
    private T _item_22_37;
    private T _item_22_38;
    private T _item_22_39;
    private T _item_22_40;
    private T _item_22_41;
    private T _item_22_42;
    private T _item_22_43;
    private T _item_22_44;
    private T _item_22_45;
    private T _item_22_46;
    private T _item_22_47;
    private T _item_22_48;
    private T _item_22_49;
    private T _item_22_50;
    private T _item_22_51;
    private T _item_22_52;
    private T _item_22_53;
    private T _item_22_54;
    private T _item_22_55;
    private T _item_22_56;
    private T _item_22_57;
    private T _item_22_58;
    private T _item_22_59;
    private T _item_22_60;
    private T _item_22_61;
    private T _item_22_62;
    private T _item_22_63;
    private T _item_23_0;
    private T _item_23_1;
    private T _item_23_2;
    private T _item_23_3;
    private T _item_23_4;
    private T _item_23_5;
    private T _item_23_6;
    private T _item_23_7;
    private T _item_23_8;
    private T _item_23_9;
    private T _item_23_10;
    private T _item_23_11;
    private T _item_23_12;
    private T _item_23_13;
    private T _item_23_14;
    private T _item_23_15;
    private T _item_23_16;
    private T _item_23_17;
    private T _item_23_18;
    private T _item_23_19;
    private T _item_23_20;
    private T _item_23_21;
    private T _item_23_22;
    private T _item_23_23;
    private T _item_23_24;
    private T _item_23_25;
    private T _item_23_26;
    private T _item_23_27;
    private T _item_23_28;
    private T _item_23_29;
    private T _item_23_30;
    private T _item_23_31;
    private T _item_23_32;
    private T _item_23_33;
    private T _item_23_34;
    private T _item_23_35;
    private T _item_23_36;
    private T _item_23_37;
    private T _item_23_38;
    private T _item_23_39;
    private T _item_23_40;
    private T _item_23_41;
    private T _item_23_42;
    private T _item_23_43;
    private T _item_23_44;
    private T _item_23_45;
    private T _item_23_46;
    private T _item_23_47;
    private T _item_23_48;
    private T _item_23_49;
    private T _item_23_50;
    private T _item_23_51;
    private T _item_23_52;
    private T _item_23_53;
    private T _item_23_54;
    private T _item_23_55;
    private T _item_23_56;
    private T _item_23_57;
    private T _item_23_58;
    private T _item_23_59;
    private T _item_23_60;
    private T _item_23_61;
    private T _item_23_62;
    private T _item_23_63;
    private T _item_24_0;
    private T _item_24_1;
    private T _item_24_2;
    private T _item_24_3;
    private T _item_24_4;
    private T _item_24_5;
    private T _item_24_6;
    private T _item_24_7;
    private T _item_24_8;
    private T _item_24_9;
    private T _item_24_10;
    private T _item_24_11;
    private T _item_24_12;
    private T _item_24_13;
    private T _item_24_14;
    private T _item_24_15;
    private T _item_24_16;
    private T _item_24_17;
    private T _item_24_18;
    private T _item_24_19;
    private T _item_24_20;
    private T _item_24_21;
    private T _item_24_22;
    private T _item_24_23;
    private T _item_24_24;
    private T _item_24_25;
    private T _item_24_26;
    private T _item_24_27;
    private T _item_24_28;
    private T _item_24_29;
    private T _item_24_30;
    private T _item_24_31;
    private T _item_24_32;
    private T _item_24_33;
    private T _item_24_34;
    private T _item_24_35;
    private T _item_24_36;
    private T _item_24_37;
    private T _item_24_38;
    private T _item_24_39;
    private T _item_24_40;
    private T _item_24_41;
    private T _item_24_42;
    private T _item_24_43;
    private T _item_24_44;
    private T _item_24_45;
    private T _item_24_46;
    private T _item_24_47;
    private T _item_24_48;
    private T _item_24_49;
    private T _item_24_50;
    private T _item_24_51;
    private T _item_24_52;
    private T _item_24_53;
    private T _item_24_54;
    private T _item_24_55;
    private T _item_24_56;
    private T _item_24_57;
    private T _item_24_58;
    private T _item_24_59;
    private T _item_24_60;
    private T _item_24_61;
    private T _item_24_62;
    private T _item_24_63;
    private T _item_25_0;
    private T _item_25_1;
    private T _item_25_2;
    private T _item_25_3;
    private T _item_25_4;
    private T _item_25_5;
    private T _item_25_6;
    private T _item_25_7;
    private T _item_25_8;
    private T _item_25_9;
    private T _item_25_10;
    private T _item_25_11;
    private T _item_25_12;
    private T _item_25_13;
    private T _item_25_14;
    private T _item_25_15;
    private T _item_25_16;
    private T _item_25_17;
    private T _item_25_18;
    private T _item_25_19;
    private T _item_25_20;
    private T _item_25_21;
    private T _item_25_22;
    private T _item_25_23;
    private T _item_25_24;
    private T _item_25_25;
    private T _item_25_26;
    private T _item_25_27;
    private T _item_25_28;
    private T _item_25_29;
    private T _item_25_30;
    private T _item_25_31;
    private T _item_25_32;
    private T _item_25_33;
    private T _item_25_34;
    private T _item_25_35;
    private T _item_25_36;
    private T _item_25_37;
    private T _item_25_38;
    private T _item_25_39;
    private T _item_25_40;
    private T _item_25_41;
    private T _item_25_42;
    private T _item_25_43;
    private T _item_25_44;
    private T _item_25_45;
    private T _item_25_46;
    private T _item_25_47;
    private T _item_25_48;
    private T _item_25_49;
    private T _item_25_50;
    private T _item_25_51;
    private T _item_25_52;
    private T _item_25_53;
    private T _item_25_54;
    private T _item_25_55;
    private T _item_25_56;
    private T _item_25_57;
    private T _item_25_58;
    private T _item_25_59;
    private T _item_25_60;
    private T _item_25_61;
    private T _item_25_62;
    private T _item_25_63;
    private T _item_26_0;
    private T _item_26_1;
    private T _item_26_2;
    private T _item_26_3;
    private T _item_26_4;
    private T _item_26_5;
    private T _item_26_6;
    private T _item_26_7;
    private T _item_26_8;
    private T _item_26_9;
    private T _item_26_10;
    private T _item_26_11;
    private T _item_26_12;
    private T _item_26_13;
    private T _item_26_14;
    private T _item_26_15;
    private T _item_26_16;
    private T _item_26_17;
    private T _item_26_18;
    private T _item_26_19;
    private T _item_26_20;
    private T _item_26_21;
    private T _item_26_22;
    private T _item_26_23;
    private T _item_26_24;
    private T _item_26_25;
    private T _item_26_26;
    private T _item_26_27;
    private T _item_26_28;
    private T _item_26_29;
    private T _item_26_30;
    private T _item_26_31;
    private T _item_26_32;
    private T _item_26_33;
    private T _item_26_34;
    private T _item_26_35;
    private T _item_26_36;
    private T _item_26_37;
    private T _item_26_38;
    private T _item_26_39;
    private T _item_26_40;
    private T _item_26_41;
    private T _item_26_42;
    private T _item_26_43;
    private T _item_26_44;
    private T _item_26_45;
    private T _item_26_46;
    private T _item_26_47;
    private T _item_26_48;
    private T _item_26_49;
    private T _item_26_50;
    private T _item_26_51;
    private T _item_26_52;
    private T _item_26_53;
    private T _item_26_54;
    private T _item_26_55;
    private T _item_26_56;
    private T _item_26_57;
    private T _item_26_58;
    private T _item_26_59;
    private T _item_26_60;
    private T _item_26_61;
    private T _item_26_62;
    private T _item_26_63;
    private T _item_27_0;
    private T _item_27_1;
    private T _item_27_2;
    private T _item_27_3;
    private T _item_27_4;
    private T _item_27_5;
    private T _item_27_6;
    private T _item_27_7;
    private T _item_27_8;
    private T _item_27_9;
    private T _item_27_10;
    private T _item_27_11;
    private T _item_27_12;
    private T _item_27_13;
    private T _item_27_14;
    private T _item_27_15;
    private T _item_27_16;
    private T _item_27_17;
    private T _item_27_18;
    private T _item_27_19;
    private T _item_27_20;
    private T _item_27_21;
    private T _item_27_22;
    private T _item_27_23;
    private T _item_27_24;
    private T _item_27_25;
    private T _item_27_26;
    private T _item_27_27;
    private T _item_27_28;
    private T _item_27_29;
    private T _item_27_30;
    private T _item_27_31;
    private T _item_27_32;
    private T _item_27_33;
    private T _item_27_34;
    private T _item_27_35;
    private T _item_27_36;
    private T _item_27_37;
    private T _item_27_38;
    private T _item_27_39;
    private T _item_27_40;
    private T _item_27_41;
    private T _item_27_42;
    private T _item_27_43;
    private T _item_27_44;
    private T _item_27_45;
    private T _item_27_46;
    private T _item_27_47;
    private T _item_27_48;
    private T _item_27_49;
    private T _item_27_50;
    private T _item_27_51;
    private T _item_27_52;
    private T _item_27_53;
    private T _item_27_54;
    private T _item_27_55;
    private T _item_27_56;
    private T _item_27_57;
    private T _item_27_58;
    private T _item_27_59;
    private T _item_27_60;
    private T _item_27_61;
    private T _item_27_62;
    private T _item_27_63;
    private T _item_28_0;
    private T _item_28_1;
    private T _item_28_2;
    private T _item_28_3;
    private T _item_28_4;
    private T _item_28_5;
    private T _item_28_6;
    private T _item_28_7;
    private T _item_28_8;
    private T _item_28_9;
    private T _item_28_10;
    private T _item_28_11;
    private T _item_28_12;
    private T _item_28_13;
    private T _item_28_14;
    private T _item_28_15;
    private T _item_28_16;
    private T _item_28_17;
    private T _item_28_18;
    private T _item_28_19;
    private T _item_28_20;
    private T _item_28_21;
    private T _item_28_22;
    private T _item_28_23;
    private T _item_28_24;
    private T _item_28_25;
    private T _item_28_26;
    private T _item_28_27;
    private T _item_28_28;
    private T _item_28_29;
    private T _item_28_30;
    private T _item_28_31;
    private T _item_28_32;
    private T _item_28_33;
    private T _item_28_34;
    private T _item_28_35;
    private T _item_28_36;
    private T _item_28_37;
    private T _item_28_38;
    private T _item_28_39;
    private T _item_28_40;
    private T _item_28_41;
    private T _item_28_42;
    private T _item_28_43;
    private T _item_28_44;
    private T _item_28_45;
    private T _item_28_46;
    private T _item_28_47;
    private T _item_28_48;
    private T _item_28_49;
    private T _item_28_50;
    private T _item_28_51;
    private T _item_28_52;
    private T _item_28_53;
    private T _item_28_54;
    private T _item_28_55;
    private T _item_28_56;
    private T _item_28_57;
    private T _item_28_58;
    private T _item_28_59;
    private T _item_28_60;
    private T _item_28_61;
    private T _item_28_62;
    private T _item_28_63;
    private T _item_29_0;
    private T _item_29_1;
    private T _item_29_2;
    private T _item_29_3;
    private T _item_29_4;
    private T _item_29_5;
    private T _item_29_6;
    private T _item_29_7;
    private T _item_29_8;
    private T _item_29_9;
    private T _item_29_10;
    private T _item_29_11;
    private T _item_29_12;
    private T _item_29_13;
    private T _item_29_14;
    private T _item_29_15;
    private T _item_29_16;
    private T _item_29_17;
    private T _item_29_18;
    private T _item_29_19;
    private T _item_29_20;
    private T _item_29_21;
    private T _item_29_22;
    private T _item_29_23;
    private T _item_29_24;
    private T _item_29_25;
    private T _item_29_26;
    private T _item_29_27;
    private T _item_29_28;
    private T _item_29_29;
    private T _item_29_30;
    private T _item_29_31;
    private T _item_29_32;
    private T _item_29_33;
    private T _item_29_34;
    private T _item_29_35;
    private T _item_29_36;
    private T _item_29_37;
    private T _item_29_38;
    private T _item_29_39;
    private T _item_29_40;
    private T _item_29_41;
    private T _item_29_42;
    private T _item_29_43;
    private T _item_29_44;
    private T _item_29_45;
    private T _item_29_46;
    private T _item_29_47;
    private T _item_29_48;
    private T _item_29_49;
    private T _item_29_50;
    private T _item_29_51;
    private T _item_29_52;
    private T _item_29_53;
    private T _item_29_54;
    private T _item_29_55;
    private T _item_29_56;
    private T _item_29_57;
    private T _item_29_58;
    private T _item_29_59;
    private T _item_29_60;
    private T _item_29_61;
    private T _item_29_62;
    private T _item_29_63;
    private T _item_30_0;
    private T _item_30_1;
    private T _item_30_2;
    private T _item_30_3;
    private T _item_30_4;
    private T _item_30_5;
    private T _item_30_6;
    private T _item_30_7;
    private T _item_30_8;
    private T _item_30_9;
    private T _item_30_10;
    private T _item_30_11;
    private T _item_30_12;
    private T _item_30_13;
    private T _item_30_14;
    private T _item_30_15;
    private T _item_30_16;
    private T _item_30_17;
    private T _item_30_18;
    private T _item_30_19;
    private T _item_30_20;
    private T _item_30_21;
    private T _item_30_22;
    private T _item_30_23;
    private T _item_30_24;
    private T _item_30_25;
    private T _item_30_26;
    private T _item_30_27;
    private T _item_30_28;
    private T _item_30_29;
    private T _item_30_30;
    private T _item_30_31;
    private T _item_30_32;
    private T _item_30_33;
    private T _item_30_34;
    private T _item_30_35;
    private T _item_30_36;
    private T _item_30_37;
    private T _item_30_38;
    private T _item_30_39;
    private T _item_30_40;
    private T _item_30_41;
    private T _item_30_42;
    private T _item_30_43;
    private T _item_30_44;
    private T _item_30_45;
    private T _item_30_46;
    private T _item_30_47;
    private T _item_30_48;
    private T _item_30_49;
    private T _item_30_50;
    private T _item_30_51;
    private T _item_30_52;
    private T _item_30_53;
    private T _item_30_54;
    private T _item_30_55;
    private T _item_30_56;
    private T _item_30_57;
    private T _item_30_58;
    private T _item_30_59;
    private T _item_30_60;
    private T _item_30_61;
    private T _item_30_62;
    private T _item_30_63;
    private T _item_31_0;
    private T _item_31_1;
    private T _item_31_2;
    private T _item_31_3;
    private T _item_31_4;
    private T _item_31_5;
    private T _item_31_6;
    private T _item_31_7;
    private T _item_31_8;
    private T _item_31_9;
    private T _item_31_10;
    private T _item_31_11;
    private T _item_31_12;
    private T _item_31_13;
    private T _item_31_14;
    private T _item_31_15;
    private T _item_31_16;
    private T _item_31_17;
    private T _item_31_18;
    private T _item_31_19;
    private T _item_31_20;
    private T _item_31_21;
    private T _item_31_22;
    private T _item_31_23;
    private T _item_31_24;
    private T _item_31_25;
    private T _item_31_26;
    private T _item_31_27;
    private T _item_31_28;
    private T _item_31_29;
    private T _item_31_30;
    private T _item_31_31;
    private T _item_31_32;
    private T _item_31_33;
    private T _item_31_34;
    private T _item_31_35;
    private T _item_31_36;
    private T _item_31_37;
    private T _item_31_38;
    private T _item_31_39;
    private T _item_31_40;
    private T _item_31_41;
    private T _item_31_42;
    private T _item_31_43;
    private T _item_31_44;
    private T _item_31_45;
    private T _item_31_46;
    private T _item_31_47;
    private T _item_31_48;
    private T _item_31_49;
    private T _item_31_50;
    private T _item_31_51;
    private T _item_31_52;
    private T _item_31_53;
    private T _item_31_54;
    private T _item_31_55;
    private T _item_31_56;
    private T _item_31_57;
    private T _item_31_58;
    private T _item_31_59;
    private T _item_31_60;
    private T _item_31_61;
    private T _item_31_62;
    private T _item_31_63;

    public static Vector32x64<T> Create(T[,] array) {
      Vector32x64<T> vec = default;
      var src = array.AsSpan2D();
      var dest = vec.AsSpan2D();
      src.CopyTo(dest);
      return vec;
    }

    public T this[int i, int j]
    {
        get => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j);
        set => Unsafe.Add(ref Unsafe.AsRef(in _item_0_0), i * Width + j) = value;
    }

    public bool Equals(Vector32x64<T> other) => AsSpan().SequenceEqual(other.AsSpan());

    public Span<T> AsSpan() => MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in _item_0_0), Count);

    public Span2D<T> AsSpan2D() => Span2D<T>.DangerousCreate(ref Unsafe.AsRef(in _item_0_0), Height, Width, 1);

    public int Height => 32;

    public int Width => 64;
    
    public int Count => Height * Width;

    public static Vector32x64<T> operator +(Vector32x64<T> left, Vector32x64<T> right) {
        Vector32x64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] + rhs[i];
        }
        return res;
    }

    public static Vector32x64<T> operator -(Vector32x64<T> left, Vector32x64<T> right) {
        Vector32x64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] - rhs[i];
        }
        return res;
    }

    public static Vector32x64<T> operator *(Vector32x64<T> left, Vector32x64<T> right) {
        Vector32x64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] * rhs[i];
        }
        return res;
    }

    public static Vector32x64<T> operator /(Vector32x64<T> left, Vector32x64<T> right) {
        Vector32x64<T> res = default;
        var lhs = left.AsSpan();
        var rhs = right.AsSpan();
        var span = res.AsSpan();
        for (int i = 0; i < span.Length; i++)
        {
            span[i] = lhs[i] / rhs[i];
        }
        return res;
    }

}

