//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4 template.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Reactive;

namespace Nncase.Tiling;

public partial class AffineExprVisitor<TExprResult, TContext>
{
    /// <inheritdoc />
    internal protected virtual TExprResult VisitAffineDimExpr(AffineDimExpr expr, TContext context)
    {
        return VisitLeafAffineDimExpr(expr, context);
    }

    /// <inheritdoc />
    internal protected virtual TExprResult VisitAffineSymbolExpr(AffineSymbolExpr expr, TContext context)
    {
        return VisitLeafAffineSymbolExpr(expr, context);
    }

    /// <inheritdoc />
    internal protected virtual TExprResult VisitAffineConstantExpr(AffineConstantExpr expr, TContext context)
    {
        return VisitLeafAffineConstantExpr(expr, context);
    }

    /// <inheritdoc />
    internal protected virtual TExprResult VisitAffineAddBinaryExpr(AffineAddBinaryExpr expr, TContext context)
    {
        Visit(expr.Lhs, context);
        Visit(expr.Rhs, context);
        return VisitLeafAffineAddBinaryExpr(expr, context);
    }

    /// <inheritdoc />
    internal protected virtual TExprResult VisitAffineMulBinaryExpr(AffineMulBinaryExpr expr, TContext context)
    {
        Visit(expr.Lhs, context);
        Visit(expr.Rhs, context);
        return VisitLeafAffineMulBinaryExpr(expr, context);
    }

    /// <inheritdoc />
    internal protected virtual TExprResult VisitAffineDivBinaryExpr(AffineDivBinaryExpr expr, TContext context)
    {
        Visit(expr.Lhs, context);
        Visit(expr.Rhs, context);
        return VisitLeafAffineDivBinaryExpr(expr, context);
    }

    /// <summary>
    /// Visit leaf <see cref="AffineDimExpr"/>.
    /// </summary>
    protected virtual TExprResult VisitLeafAffineDimExpr(AffineDimExpr expr, TContext context) => DefaultVisitLeaf(expr, context);

    /// <summary>
    /// Visit leaf <see cref="AffineSymbolExpr"/>.
    /// </summary>
    protected virtual TExprResult VisitLeafAffineSymbolExpr(AffineSymbolExpr expr, TContext context) => DefaultVisitLeaf(expr, context);

    /// <summary>
    /// Visit leaf <see cref="AffineConstantExpr"/>.
    /// </summary>
    protected virtual TExprResult VisitLeafAffineConstantExpr(AffineConstantExpr expr, TContext context) => DefaultVisitLeaf(expr, context);

    /// <summary>
    /// Visit leaf <see cref="AffineAddBinaryExpr"/>.
    /// </summary>
    protected virtual TExprResult VisitLeafAffineAddBinaryExpr(AffineAddBinaryExpr expr, TContext context) => DefaultVisitLeaf(expr, context);

    /// <summary>
    /// Visit leaf <see cref="AffineMulBinaryExpr"/>.
    /// </summary>
    protected virtual TExprResult VisitLeafAffineMulBinaryExpr(AffineMulBinaryExpr expr, TContext context) => DefaultVisitLeaf(expr, context);

    /// <summary>
    /// Visit leaf <see cref="AffineDivBinaryExpr"/>.
    /// </summary>
    protected virtual TExprResult VisitLeafAffineDivBinaryExpr(AffineDivBinaryExpr expr, TContext context) => DefaultVisitLeaf(expr, context);

}
