//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4 template.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

using System;
using Nncase.IR;

namespace Nncase.TIR;

public partial class Range
{
    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((Dimension Start, Dimension Stop) value) => new(value.Start, value.Stop, 1);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((Dimension Start, int Stop) value) => new(value.Start, value.Stop, 1);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((int Start, Dimension Stop) value) => new(value.Start, value.Stop, 1);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((int Start, int Stop) value) => new(value.Start, value.Stop, 1);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((Dimension Start, Dimension Stop, Dimension Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((Dimension Start, Dimension Stop, int Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((Dimension Start, int Stop, Dimension Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((Dimension Start, int Stop, int Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((int Start, Dimension Stop, Dimension Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((int Start, Dimension Stop, int Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((int Start, int Stop, Dimension Step) value) => new(value.Start, value.Stop, value.Step);

    /// <summary>
    /// Convert <see cref="ValueTuple{T1, T2, T3}"/> to <see cref="Range"/>.
    /// </summary>
    /// <param name="value">value tuple.</param>
    public static implicit operator Range((int Start, int Stop, int Step) value) => new(value.Start, value.Stop, value.Step);

}
