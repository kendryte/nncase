name: dataset-test

on:
  schedule:
    - cron: '0 17 * * 6'
    # 1:00 am

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: [self-hosted]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Install Conan
      shell: bash
      run: |
        pip install conan

    - name: Configure Conan
      if: runner.os == 'Linux'
      shell: bash
      run: |
        conan profile update settings.compiler.libcxx=libstdc++11 default

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      env:
        CC: gcc-10
        CXX: g++-10
      if: runner.os == 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DPython3_ROOT_DIR=${pythonLocation}

    - name: Configure CMake
      if: runner.os != 'Linux'
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=ON -DPython3_ROOT_DIR=${pythonLocation}

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config $BUILD_TYPE

    - name: Install
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --install . --prefix /tmp/nncase

    - name: CTest
      shell: bash
      working-directory: ${{github.workspace}}/build/tests/kernels
      run: ctest -C $BUILD_TYPE

  dataset-test:
    needs: [build]
    runs-on: [self-hosted]
    timeout-minutes: 4320

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7

    - name: Install Python Packages
      if: runner.os != 'Macos'
      shell: bash
      run: |
        pip install conan tensorflow==2.5.0 matplotlib pillow onnx==1.9.0 onnx-simplifier==0.3.6 onnxoptimizer==0.2.6 onnxruntime==1.8.0 opencv-python
        pip install torch==1.9.0+cpu torchvision==0.10.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
        pip install imageio==2.15.0
        pip install kendryte_caffe
        pip install pytest

    - name: Create Test Environment
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        pip install pytest pytest-xdist
        mkdir test_results

    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os != 'Windows'
      shell: bash
      env:
        PYTHONPATH: /tmp/nncase/lib:/tmp/nncase/python:${{github.workspace}}/tests
        ONNX_MODELS_DIR: /compiler/github-runner/onnx-models
        TFLITE_MODELS_DIR: /compiler/github-runner/tflite-models
        DATASET_DIR: /compiler/share
      run: |
        
        pytest -n 8 tests/models/tflite-model-zoo --doctest-modules --junitxml=test_results/models-dataset.xml
        for dir in `ls dataset_tests_output`; do cat dataset_tests_output/$dir/dataset_test_result.txt; done
