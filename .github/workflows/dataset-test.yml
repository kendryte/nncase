name: dataset-test

on:
  schedule:
    - cron: '0 17 * * 6'
    # 1:00 am

jobs:
  build:
    name: build-${{matrix.config.name}}
    runs-on: [self-hosted]
    strategy:
      matrix:
        config:
          - {name: x86_64-linux, shell: bash, cmakeArgs: '', buildType: Release}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install Conan
      run: pip install conan==1.59.0

    - name: Configure Conan (Linux)
      run: |
        conan profile update settings.compiler.libcxx=libstdc++11 default
      if: runner.os == 'Linux'

    - name: Build
      env:
        CC: gcc-10
        CXX: g++-10
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{matrix.config.buildType}} ${{matrix.config.cmakeArgs}} -DBUILD_TESTING=ON -DPython3_ROOT_DIR=${pythonLocation}
        cmake --build build --config ${{matrix.config.buildType}}

    - name: Install
      run: cmake --install build --prefix /tmp/nncase

    - name: CTest
      working-directory: ${{github.workspace}}/build/tests/kernels
      run: ctest -C ${{matrix.config.buildType}}

  dataset-test:
    needs: [build]
    name: test-${{matrix.config.name}}
    runs-on: [self-hosted]
    timeout-minutes: 4320
    strategy:
      matrix:
        config:
          - {name: x86_64-linux, shell: bash}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install Python Packages
      run: pip install -r requirements.test.txt

    - name: Create Test Environment
      run: mkdir test_results

    - name: Test
      working-directory: ${{github.workspace}}
      shell: bash
      env:
        PYTHONPATH: /tmp/nncase/lib:/tmp/nncase/python:${{github.workspace}}/tests
        ONNX_MODELS_DIR: /compiler/github-runner/onnx-models
        TFLITE_MODELS_DIR: /compiler/github-runner/tflite-models
        DATASET_DIR: /compiler/share
      run: |
        pytest -n 8 tests/models/tflite-model-zoo --doctest-modules --junitxml=test_results/tflite-models.xml
        for dir in `ls dataset_tests_output`; do cat dataset_tests_output/$dir/dataset_test_result.txt; done
      if: runner.os != 'Windows'
      
    - name: Upload Dataset Test Results
      uses: actions/upload-artifact@v3
      with:
        name: nncase-dataset_test_results-${{matrix.config.name}}
        path: ${{github.workspace}}/dataset_tests_output
        if-no-files-found: error
