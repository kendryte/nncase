setup: # 整个runner期间的超参数配置
  root: tests_output
  numworkers: 8
  log_txt: true
running: # 每个case运行时的处理配置
  preprocess: null
  postprocess: null
case: # case的配置，应该是一个多层次的
  importer_opt:
    kwargs: 
      input_layout: 'NHWC'
      output_layout: 'NHWC'
  preprocess_opt:
    name: 'preprocess_opt'
    kwargs:
      image_format: 'BGR' # BGR or RGB
      input_shape: [224,224,3] # HWC
      norm: {
        mean: [0.485, 0.456, 0.406],
        scale: [0.229, 0.224, 0.225]
        }
      input_range: [0, 1] # float range
  compile_opt:
    kwargs:
      dump_asm: true
      dump_ir: true
      input_type: 'uint8' # uint8 or float32
      quant_type: 'int8' # uint8, int8 or float32
      
  ptq_opt:
    kwargs:
      input_mean: 0.5
      input_std: 0.5
  generate_inputs:
    name: generate_random
    kwargs: null
    numbers: 1
    batch_size: 1
  generate_calibs:
    name: generate_random
    kwargs: null
    numbers: 1
    batch_size: 10
  eval:
    - name: target
      values:
        # - cpu
        # - vulkan
        # - k210
        - k510
    - name: ptq
      values:
        - false
  infer:
    - name: target
      values:
        # - cpu
        # - vulkan
        # - k210
        - k510
    - name: ptq
      values:
        - false
        # - true
judge:
  common: &judge_common
    simarity_name:  cosine
    threshold: 0.98
    log_hist: true
    matchs: null
  specifics: null # the specifics mean you can use specific overwirte it like this 
    # - matchs: 
    #   target: k510
    #   ptq: false
    # threshold: 0.99
    # - matchs: 
    #     target: k210
    #     ptq: true
    #   threshold: 0.98