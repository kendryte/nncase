@using global::CApiGen
@inherits RazorLight.TemplatePage<CommandExtractor>
@{
  DisableEncoding = true;
  var optionsName = Model.OptionsType.Name.ToSnake();
}


// clang-format off
/* This block is generated by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
@foreach (var info in Model.OptionInfos) 
{
  if (info.PropertyType.IsEnum)
  {
    var enumName = info.PropertyType.Name.ToSnake();
@:enum @(enumName)_t : uint8_t {
foreach(var (name, value) in info.PropertyType.RenderEnumFields(LangMode.UnCPP)){
@:  @(enumName)_@(name.ToSnake()) = @(value),
}
@:};
  }
}
/* end the auto generated block by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
// clang-format on


    // clang-format off
    /* This block is generated by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
    clr_object_handle_t (*@(optionsName)_create)();
@foreach (var info in Model.OptionInfos) 
{
  if (info.PropertyType.IsEnum) {
    @:@(info.RenderSignature(SignMode.Type, LangMode.UnCPP)) (*@(optionsName)_get_@(info.PropertyName.ToSnake()))(clr_object_handle_t handle);
  }
    @:void (*@(optionsName)_set_@(info.PropertyName.ToSnake()))(clr_object_handle_t handle, @(info.RenderSignature(SignMode.Type | SignMode.Param, LangMode.UnCPP)));
}
    /* end the auto generated block by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
    // clang-format on


// clang-format off
/* This block is generated by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
class @(optionsName) : public clr_object_base {
  public:
    using clr_object_base::clr_object_base;

    @(optionsName)() {
        obj_ = nncase_clr_api()->@(optionsName)_create();
    }
@foreach( var info in Model.OptionInfos)
{
  if (info.PropertyType.IsEnum) {
@:
@:    @(info.RenderSignature(SignMode.Type, LangMode.Pyb)) @(info.PropertyName.ToSnake())() {
@:        return (@(info.PropertyType.Name.ToSnake())_t)nncase_clr_api()->@(optionsName)_get_@(info.PropertyName.ToSnake())(obj_.get());
@:    }
  }
@:
@:    void @(info.PropertyName.ToSnake())(@(info.RenderSignature(SignMode.Type | SignMode.Param, LangMode.Pyb))) {
  if (info.PropertyType.IsNestedArrayType(out var stacks) && stacks.Count > 1)
  {
@:@info.RenderPybAssginNestArray(info.PropertyType, stacks, 8)
  }
@:        nncase_clr_api()->@(optionsName)_set_@(info.PropertyName.ToSnake())(obj_.get(), @(info.RenderSignature(SignMode.Param, LangMode.Pyb)));
@:    }
}
};
/* end the auto generated block by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
// clang-format on