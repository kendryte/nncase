@using global::CApiGen
@inherits RazorLight.TemplatePage<CommandExtractor>
@{
  DisableEncoding = true;
}

/* This block is generated by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
public delegate* unmanaged<IntPtr> @(Model.OptionsType.Name)CreatePtr;
@foreach (var info in Model.OptionInfos) 
{
@:public delegate* unmanaged<IntPtr, @(info.GetUnmanagedTypeNames())> @(Model.OptionsType.Name)Get@(info.PropertyName)Ptr;
@:public delegate* unmanaged<IntPtr, @(info.GetUnmanagedTypeNames()), void> @(Model.OptionsType.Name)Set@(info.PropertyName)Ptr;
}
/* end the auto generated block by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */

/* This block is generated by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */
[UnmanagedCallersOnly]
private static IntPtr @(Model.OptionsType.Name)Create()
{
    return GCHandle.ToIntPtr(GCHandle.Alloc(new @(Model.OptionsType.Name)()));
}

@foreach (var info in Model.OptionInfos) 
{
@:
@:[UnmanagedCallersOnly]
@:private static void @(Model.OptionsType.Name)Get@(info.PropertyName)Ptr(IntPtr handle)
@:{
@:     return Get<@(Model.OptionsType.Name)>(handle).@(info.PropertyName);
@:}
@:
@:[UnmanagedCallersOnly]
@:private static void @(Model.OptionsType.Name)Set@(info.PropertyName)Ptr(IntPtr handle, @(info.GetUnmanagedTypeNames()) value)
@:{
@:     Get<@(Model.OptionsType.Name)>(handle).@(info.PropertyName) = @(info.GetUnmanagedValueSettingName());
@:}
}
/* end the auto generated block by tools/stackvm_gen/CApiGen at @Raw(DateTimeOffset.Now.ToString()). */