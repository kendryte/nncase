@using IsaGen
@inherits RazorLight.TemplatePage<IsaExtractor>
@{ DisableEncoding = true;
    string HexTemplate(uint value, uint length)
    {
        var hexForamt = $"X{(int)Math.Ceiling(length / 4f)}";
        return $"0x{value.ToString(hexForamt)}";
    } }
/* This file is generated by tools/stackvm_gen/IsaGen at @Raw(DateTimeOffset.Now.ToString()).
 *
 * Copyright 2019-2021 Canaan Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <nncase/codegen/stackvm/op_writer.h>

using namespace nncase;
using namespace nncase::codegen;
using namespace nncase::codegen::stackvm;
using namespace nncase::runtime;
using namespace nncase::runtime::stackvm;

op_builder::op_builder(ir::node &node, section_writer &writer)
    : writer_(writer)
{
    writer.add_symbol(node.name());
}

@foreach (var inst in Model.Instructions.SelectMany(x => x.Value))
{
    var name = inst.Name.ToLowerInvariant().Replace('.', '_');
@:void op_builder::@(name)_(@string.Join(", ", inst.Fields.Where(x => x.Value == null).Select(x => $"{x.Type} {x.Name}")))
@:{
@:    op_writer<@(name)_op_t>()(@(name)_op_t(@string.Join(", ", inst.Fields.Where(x => x.Value == null).Select(x => x.Name))), writer_);
@:}
@:
}